<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook V4.1//EN" [
<!entity fwbuilder-url    "http://www.fwbuilder.org/">
<!entity tutorial-url     "http://www.fwbuilder.org/pages/Tutorial/index.html">
<!entity requirements-url "http://www.fwbuilder.org/pages/Requirements.html">
<!entity iptables-url     "http://netfilter.filewatcher.org/">
<!entity ipfilter-url     "http://coombs.anu.edu.au/~avalon/">
<!entity gtkmm-url        "http://gtkmm.sourceforge.net/">
<!entity gtkmm-download   "http://www.hvrlab.org/pub/gtkmm/">
<!entity ipt-howto        "http://www.netfilter.org/documentation/HOWTO//NAT-HOWTO.html">
<!entity faq-url          "http://www.fwbuilder.org/pages/Documents/FAQ/FAQ.html">
]>

<book id="Using">
  <?dbhtml filename="index.html">
  
  <bookinfo>

    <productname>Firewall Builder</productname>

    <title>Firewall Builder User's Guide</title>

    <author>
      <firstname>Vadim</firstname>
      <surname>Kurland</surname>
      <affiliation>
        <address><email>vadim@fwbuilder.org</email></address>
      </affiliation>
    </author>
    
  </bookinfo>

<!-- ############################################################### -->
  <chapter id="Introduction">
    <title>Introduction</title>

    <sect1>
      <title>Introducing Firewall Builder</title>

      <para>
        Whether you are an experienced professional, switching from
        Checkpoint Firewall-1 to Cisco PIX or to an Open Source
        firewall, or a hobbyist trying to secure your home network,
        Firewall Builder can help you manage your firewall policy in a
        simpler and efficient way.
      </para>

      <para>
        With Firewall Builder, you can manage security policy of your
        firewall efficiently and accurately, without the learning
        curve usually associated with command line interfaces of many
        free and commercial firewalls. You do not have to think of a
        policy in terms of obscure port numbers, firewall interfaces
        and make choices about what interface certain rule should
        belong to and so on. Instead, you create a set of objects
        describing your firewall, subnets of your network and hosts on
        them, then implement firewall policy by dragging objects into
        policy rules. You can also take an advantage of a large
        collection of predefined objects describing many standard
        protocols and services.Once policy is built in the GUI, you
        can compile it and install it on the firewall machine.
      </para>

      <para>Firewall Builder provides:</para>

      <para><itemizedlist>
          <listitem>
            <para>Over 100 predefined objects for most popular and
            widely used protocols and services</para>
          </listitem>

          <listitem>
            <para>Ability to create custom objects describing
            IP,ICMP,TCP,UDP or custom services</para>
          </listitem>

          <listitem>
            <para>Ability to create objects to describe hosts,
            networks and address ranges</para>
          </listitem>

          <listitem>
            <para>Powerful wizards and other tools to help you
            jumpstart your firewall policy, and do it right from the
            first try. Wizards implement standard policies for typical
            network layouts, which can later be extended and edited by
            hand</para>
          </listitem>

          <listitem>
            <para>Network discovery tool, to automate objects creation
            task</para>
          </listitem>
          
          <listitem>
            <para>Object oriented approach to the policy management:
            change made to an object gets immediately reflected in all
            policy rules of all firewalls using that
            object. Configuration for multiple firewalls shares the
            same object database.</para>
          </listitem>

          <listitem>
            <para>The ability to turn firewall policy into
            configuration file or a script and then install it on a
            firewall with just a few clicks of a mouse.</para>
          </listitem>

          <listitem>
            <para>Convenient GUI that supports standard Copy/Paste
            operations for both text strings and network objects and
            allows for policy editing using drag and drop</para>
          </listitem>

          <listitem>
            <para>Support for several firewall platforms, including
            Cisco PIX and Open Source firewalls iptables, ipfilter and
            pf.</para>
          </listitem>

          <listitem>
            <para>The ability to print single object or firewall
            policy or the whole hierarchy, or export it to the text
            file in either plain text or html format</para>
          </listitem>

        </itemizedlist>
      </para> 

      <figure id="example1" float="1">
        <title>Sample firewall policy</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="scrn2.jpg" format="jpg" align="Left" scale="25">
          </imageobject>
        </mediaobject>
      </figure>



    </sect1>
  </chapter>

<!-- ############################################################### -->
  <chapter id="Installation">
    <title>Installation</title>

<!-- *************************************************************** -->
    <sect1>
      <title>Packaging</title>

      <para>
       Firewall Builder is Open Source project. Source code for the
       API library, GUI and policy compilers for iptables, ipfilter
       and pf is available for download from our web site
       http://www.fwbuilder.org/. Firewall Builder for PIX is
       available only as a binary package. 
      </para>

      <para>
       We do encourage people to compile from the source code;
       building instructions are available on the same web site in the
       section "Documents". Firewall Builder can be compiled and works
       on the following OS and distributions:
      </para>

      <para><itemizedlist>
        <listitem>
          <para>RedHat Linux 7.2 and 7.3</para>
        </listitem>
        <listitem>
          <para>Mandrake Linux 8.2 </para>
        </listitem>
        <listitem>
          <para>SuSE Linux 7.3 and 8.0</para>
        </listitem>
        <listitem>
          <para>FreeBSD 4.5 and 4.6</para>
        </listitem>
        <listitem>
          <para>OpenBSD 3.0 and 3.1</para>
        </listitem>
        <listitem>
          <para>Solaris 8</para>
        </listitem>
      </itemizedlist></para>

      <para>
       Firewall Builder comes in a several packages:
      </para>

      <para><itemizedlist>
        <listitem>
          <para>Firewall Builder <emphasis>API library</emphasis>: package "libfwbuilder"</para>
        </listitem>

        <listitem>
          <para>Firewall Builder <emphasis>GUI</emphasis>: package "fwbuilder"</para>
        </listitem>

        <listitem>
          <para>Parts of GUI and policy compiler for <emphasis>iptables</emphasis>: package "fwbuilder-ipt"</para>
        </listitem>

        <listitem>
          <para>Parts of GUI and policy compiler for <emphasis>ipfilter</emphasis>: package "fwbuilder-ipf"</para>
        </listitem>

        <listitem>
          <para>Parts of GUI and policy compiler for <emphasis>pf</emphasis>: package "fwbuilder-pf"</para>
        </listitem>

        <listitem>
          <para>Parts of GUI and policy compiler for <emphasis>Cisco PIX</emphasis>: package "fwbuilder-pix"</para>
        </listitem>

      </itemizedlist></para>

      <para>
       One needs to install the API library
       <emphasis>libfwbuilder</emphasis>, the GUI
       <emphasis>fwbuilder</emphasis> and at least one module that
       provides support for the target firewall platform, this could
       be either <emphasis>fwbuilder-ipt</emphasis> or one of the
       others.
      </para>

      <para>
       Typical installation problems are addressed in the document "Firewall Builder
       Frequently Asked Questions (FAQ)" which can be found at the following
       <ulink url="&faq-url">URL</ulink>
      </para>

    </sect1>

<!-- *************************************************************** -->
    <sect1>
      <title>General prerequisites</title>

      <para>Certain libraries should be installed on your system
      before you can install our pre-built binary packages. Here is
      the list:</para>

      <para>
        <itemizedlist>
          <listitem>
            <para>libstdc++ version 2.9 or newer</para>
          </listitem>
          <listitem>
            <para>gdk-pixbuf version 0.11 or newer</para>
          </listitem>
          <listitem>
            <para>gtkmm version 1.2.8 or newer</para>
          </listitem>
          <listitem>
            <para>libsigc++ version 1.0 or newer</para>
          </listitem>
          <listitem>
            <para>libxml2 version 2.4.10 or newer</para>
          </listitem>
          <listitem>
            <para>libxslt version 1.0.7 or newer</para>
          </listitem>
          <listitem>
            <para>ucd-snmp version 4.2.3 or newer</para>
          </listitem>
          <listitem>
            <para>openssl version 0.9.6b or newer</para>
          </listitem>
        </itemizedlist>
      </para>

      <para>
       Most of these packages come standard with popular Linux
       distributions and may already be on your sysetm. In case they
       are missing, you need to install them from your original OS
       media. On the other hand, some packages are missing on some
       distributions and therefore need to be downloaded and
       installed. See below for specific instructions as of where you
       can get these packages from for different OS and distributions.
      </para>

      <para>
       You can always verify if certain package is installed on your
       system using the following command:
      </para>

      <programlisting>
       $ rpm -q gtkmm
      </programlisting>

      <para>
       This command checks if package gtkmm is installed. If the
       package is present, it prints its version, too.
      </para>

      <para>
       Once you have installed all the packages, you can start
       Firewall Builder GUI by simply typing "fwbuilder" on the
       command line.
      </para>

    </sect1>

<!-- *************************************************************** -->
    <sect1>
      <title>Installing pre-built binaries on RedHat Linux 7.2 and 7.3</title>

      <para>
       All prerequisite libraries, except gtkmm, come with RedHat 7.3,
       so chances are you already have them. If your system is
       configured as "Gnome Workstation" or Ximian Gnome is installed,
       then you already have proper gtk+, gtkmm and libsigc++
       packages. If you are using KDE, then you may need to add these
       packages.
      </para>

      <para>
       We build using gtkmm and libsigc++ packages that come with
       Ximian Gnome.  These RPM can be downloaded from their ftp site
       directly, or obtained as part of Ximian Gnome or using Red
       Carpet. libsigc++ now comes on disk #2 with RedHat 7.3. Users
       of RedHat 7.2 systems can also get it from the home page at
       http://libsigc.sourceforge.net/
      </para>

      <para>
       Firewall Builder implements number of features which make use
       of SNMP, therefore you will need ucd-snmp RPM installed,
       too. RPMs we distribute are built using ucd-snmp v4.2.3 (as of
       Feb 2002)
      </para>

      <para>
       List of recommended packages and where you can get them from:
      </para>

      <para>
        <itemizedlist>
          <listitem>
            <para>gtkmm-1.2.8-1</para>
            <para> ftp://ftp.ximian.com/pub/ximian-gnome/redhat-73-i386/</para>
          </listitem>
          <listitem>
            <para>gdk-pixbuf-0.16.0</para>
            <para> Ximian Gnome or RedHat updates</para>
          </listitem>
          <listitem>
            <para>libsigc++-1.0.4-1</para>
            <para> RedHat 7.3 distribution or ftp://ftp.ximian.com/pub/ximian-gnome/redhat-73-i386/    </para>
          </listitem>
          <listitem>
            <para>libxml2-2.4.19</para>
            <para> RedHat 7.3 distribution or ftp://ftp.gnome.org/pub/GNOME/stable/redhat/i386/libxml/ </para>
          </listitem>
          <listitem>
            <para>libxslt-1.0.15-1</para>
            <para> RedHat 7.3 distribution or ftp://ftp.gnome.org/pub/GNOME/stable/redhat/i386/libxslt/</para>
          </listitem>
          <listitem>
            <para>ucd-snmp-4.2.3</para>
            <para> RedHat distribution</para>
          </listitem>
          <listitem>
            <para>ucd-snmp-utils-4.2.3</para>
            <para> RedHat distribution</para>
          </listitem>
          <listitem>
            <para>openssl-0.9.6b</para>
            <para> RedHat distribution</para>
          </listitem>
        </itemizedlist>
      </para>

      <para>Firewall Builder for PIX has the same requirements.</para>

    </sect1>

<!-- *************************************************************** -->
    <sect1>
      <title>Installing pre-built binaries on Mandrake Linux 8.2</title>

      <para>
       Requirements for installing Firewall Builder on Mandrake are
       very much the same as for RedHat.
      </para>

      <para>
       Here is the list of recommended packages. All these packages
       come with standard Mandrake distribution, but you may need to
       add some of them if they are not installed. What packages are
       going to need to be added depends on the configuration of
       OS. Some of these packages can be found on CD #1, while some
       others are on CD #2. Use rpmdrake to install these.
      </para>

      <para>
        <itemizedlist>
          <listitem>
            <para>libglib1.2-1.2.10</para>
          </listitem>
          <listitem>
            <para>libstdc++2.10-2.96</para>
          </listitem>
          <listitem>
            <para>libgtkmm1.2-1.2.8</para>
          </listitem>
          <listitem>
            <para>libgdk-pixbuf2-0.16.0</para>
          </listitem>
          <listitem>
            <para>libsigc++1.0-4.0.4</para>
          </listitem>
          <listitem>
            <para>libxml2-2.4.16</para>
          </listitem>
          <listitem>
            <para>libxslt1-1.0.12</para>
          </listitem>
          <listitem>
            <para>libxslt-proc-1.0.12</para>
          </listitem>
          <listitem>
            <para>libsnmp0-4.2.3</para>
          </listitem>
          <listitem>
            <para>ucd-snmp-utils-4.2.3</para>
          </listitem>
          <listitem>
            <para>libopenssl0-0.9.6c</para>
          </listitem>
        </itemizedlist>
      </para>

      <para>Firewall Builder for PIX has the same requirements.</para>

    </sect1>


  </chapter>

<!-- ############################################################### -->
  <chapter id="using-gui">
    <title>Using Firewall Builder</title>


<!-- *************************************************************** -->
    <sect1>
      <title>The Main Window</title>

      <para>The main window is divided onto two parts: the objects
      tree and a dialog area. Object which is surrently selected in
      the tree is highlighted with a color and is shown in the dialog
      in the right half of the main window. You can create more than
      one main window using main menu
      <guimenuitem>"File"</guimenuitem>/<guimenuitem>"New
      Window"</guimenuitem>. All windows are synchronized and work
      with the same object tree. Changes made to the object in one
      window are immediately reflected in all windows where it is
      visible, both in the tree and in the dialog. We recommend using
      multi-window mode if you work with firewall with very large
      policy. In this case opening the policy may take some time and
      switching between the policy view and individual objects can
      slow the work down. Opening the policy in one window and working
      with individual objects in another helps avoid this problem.
      </para>

      <para>Drag and drop and Copy/Paste operations work across
      different windows.</para>

      <figure id="main-win1" float="1">
        <title>Main window</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="main_win1.jpg" format="jpg" align="Left" scale="25">
          </imageobject>
        </mediaobject>
      </figure>

    </sect1>

<!-- *************************************************************** -->
    <sect1>
      <title>GUI Options</title>

      <para>Certain aspects of the GUI behavior can be changed by
      user. These are gathered in the dialog called "Options" which
      can be accessed through main menu
      "<guimenuitem>Edit</guimenuitem>/<guimenuitem>Options</guimenuitem>". GUI
      Options dialog is represented on <xref linkend="options1">.
      </para>

      <figure id="options1" float="1">
        <title>GUI Options Dialog</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="options1.jpg" format="jpg" align="Left" scale="25">
          </imageobject>
        </mediaobject>
      </figure>


      <para>
        <itemizedlist>
          <listitem>
            <para><guimenuitem>General/Paths</guimenuitem></para>

            <itemizedlist>
              <listitem>
                <para>Working directory:</para>

                <para>This option tells the program where data file
                should be stored. Policy compilers also store firewall
                configuration files or scripts they produce in the
                same directory. If this parameter is left blank, then
                policy compiler will store firewall configuration it
                generates in the same directory the original data file
                was loaded from.</para>
              </listitem>
            </itemizedlist>
          </listitem>

          <listitem>
            <para><guimenuitem>Network</guimenuitem></para>

            <itemizedlist>
              <listitem>
                <para>SNMP Timeout and Retries</para>

                <para>Here you can configure timeout values and retry
                counters for SNMP queries. These values are used when
                program runs SNMP query to collect host "sysinfo" data
                or its interfaces Note that Network discovery Druid
                has its own settings for SNMP timeout value and retry
                counter..</para>
              </listitem>
              <listitem>
                <para>DNS Timeout and Retries</para>

                <para>Here you can configure timeout values and retry
                counters for DNS queries. These values are used when
                the program uses DNS to determine host's address by
                its name. </para>
              </listitem>
            </itemizedlist>
          </listitem>

          <listitem>
            <para><guimenuitem>GUI</guimenuitem></para>

            <itemizedlist>
              <listitem>
                <para>Remember window size at exit</para>

                <para>If this option is checked, the GUI remembers
                main window size when program finishes. The
                information is stored in user's preferences file so
                that when the program is started again next time, it
                opens window of the same size as before.</para>
              </listitem>

              <listitem>
                <para>Hide navigation bar in object dialog</para>

                <para>The GUI can show navigation bar on top for the
                object's dialog. The navigation bar shows current
                position in the tree and familiar buttons that allow
                navigation "up", "down", "left" in the tree. If this
                option is checked, then the bar will disappear.</para>
              </listitem>
            </itemizedlist>
          </listitem>

          <listitem>
            <para><guimenuitem>GUI / Object Tooltips</guimenuitem></para>

            <para>Firewall Builder can show object's properties in a
            quick pop-up window (this feature is often called
            "tooltip") when user flies mouse cursor over the object in
            a group view or in the firewall policy view, where objects
            are represented by their icons. This is a convenient way
            to quickly check object's properties without having to
            leave current dialog and open the object's dialog. There
            are three choices for the tooltip feature:
           </para>

            <para>
              <itemizedlist>
                <listitem><para>Off</para></listitem>
                <listitem><para>Show properties in a tooltip pop-up window</para></listitem>
                <listitem><para>Show properties on a main window's status bar</para></listitem>
              </itemizedlist>
            </para>
        
            <para>For the second choice (showing in tooltip window)
            additional parameter is avaliable, it controls a delay
            before tooltip window appears after mouse cursor is
            positioned over the object's icon.</para>
          </listitem>

          <listitem>
            <para><guimenuitem>GUI / Behavior</guimenuitem></para>
            <anchor id="gui-behavior">

            <itemizedlist>
              <listitem>
                <para>Automatically save data in dialogs while
                switching between objects</para>

                <para>The GUI shows dialog for every opened object in
                the same place (right half of the main
                window). Normally if user has made some changes to the
                object's data and wants to switch to another object
                without clicking on <guibutton>"Apply"</guibutton> or
                <guibutton>"Undo"</guibutton> button, GUI shows pop-up
                dialog asking whether data should be saved or changes
                should be ignored. If this option is turned on though,
                the program automatically saves data every time user
                leaves dialog with unsaved data to open another
                object.</para>

              </listitem>
            </itemizedlist>

          </listitem>

          <listitem>
            <para><guimenuitem>GUI / Tree View</guimenuitem></para>

            <para>As was mentioned before, objects can be organized
            into different libraries. Usually there are at least two
            libraries: "User" and "Standard". GUI can represent
            objects either in one large tree, or in a separate tree
            for each library.</para>

            <itemizedlist>
              <listitem>
                <para>Show object libraries in separate trees</para>

                <para>If this option is checked, the GUI shows objects
                belonging to different libraries in a separate
                trees</para>
              </listitem>

              <listitem>
                <para>Combine all libraries in a single tree</para>

                <para>If this option is checked, the GUI combines all
                objects in one large tree.</para>
              </listitem>

              <listitem>
                <para>Show properties of objects in the tree</para>

                <para>If this option is checked, then GUI shows
                brief summary of object's properties, or one most
                frequently used property, in the additional column in
                the tree view.</para>
              </listitem>
            </itemizedlist>

          </listitem>
        </itemizedlist>
      </para>
    </sect1>

<!-- *************************************************************** -->
    <sect1>
      <title>Object Tree</title>

      <sect2>
        <title>Standard Tree Structure</title>

        <figure id="tree-structure" float="1" pgwide="0">
          <title>Standard Tree Structure</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="tree_structure1.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>

        <para>Object tree provides standard places for all object
        types so that they can be arranged in a hierarchy. Types that
        correspond to network objects (hosts, address ranges, networks
        and groups of these) are located in the branch "Objects",
        types that correspond to all services are in the branch
        "Services", time intervals are in the branch "Time" and all
        firewalls are in the branch "Firewalls". Newly created objects
        are automatically placed in their corresponding position in
        the tree. Each branch of the tree is automatically sorted by
        object's name.</para>

        <note>
          <para>Future versions of Firewall Builder will support
          creation of custom branches in the tree and placing of
          objects and groups of objects in any branch.</para>
        </note>

        <para>The program can maintain all the objects in a single
        tree, or divide them onto "libraries". The latter case is
        illustrated by <xref linkend="main-win2"> where each library
        is represented by individual tree; one tree is always called
        "User" and holds user-defined objects. Another tree is called
        "Standrard" and holds a collection of standard objects that
        come with the program. Some of the standard objects are
        visible on the screenshot <xref linkend="main-win2">. Standard
        objects represent over 100 of frequently used protocols and
        services.  There may be more libraries in the future. Both
        user-defined and standard objects can be used equally in
        firewall policies or in groups. </para>

        <figure id="main-win2" float="1">
          <title>Standard Objects</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="main_win2.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>
      </sect2>


      <sect2>
        <title>Creating Objects</title>

        <para>New object can be created using main menu
        <guimenuitem>"Insert"</guimenuitem>. Certain objects can also
        be created via pop-up menu that can be called by clicking
        right mouse button on the object in the tree.</para>

        <figure id="menu-insert" float="1">
          <title>Creating Objects Using Main Menu 'Insert'</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="scrn-menu1.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>

        <para>You can create all objects through main menu 'Insert'
        (<xref linkend="menu-insert">). Since some objects can be
        placed in the tree only under certain object types,
        corresponding menu items get enabled only when right object is
        displayed in the dialog in the main window. For example,
        interface object can only be placed under host or firewall,
        therefore menu item <guimenuitem>"Insert"</guimenuitem>/<guimenuitem>"Interface"</guimenuitem>
        is enabled only if host or firewall object is opened in the
        main window. Likewise, menu item <guimenuitem>"Address"</guimenuitem>
        is enabled only when interface object is opened.</para>

        <para>Another way to create objects uses pop-up menu which
        appears if you click right mouse button on the object label in
        the tree (<xref linkend="popup-menu-insert">).</para>


        <figure id="popup-menu-insert">
          <title>Adding Objects Using Pop-up Menu</title>
          <informaltable frame="none">
          <tgroup cols="2">
            <colspec align="left" colwidth="1*">
            <colspec align="left">
            <tbody>
              <row>
                <entry>
                  <inlinemediaobject>
                    <imageobject>
                      <imagedata fileref="scrn-menu2.jpg" format="jpg" align="Left" scale="25">
                    </imageobject>
                  </inlinemediaobject>
                </entry>

                <entry>
                  <inlinemediaobject>
                    <imageobject>
                      <imagedata fileref="scrn-menu3.jpg" format="jpg" align="Left" scale="25">
                    </imageobject>
                  </inlinemediaobject>
                </entry>
              </row>
            </tbody>
          </tgroup>
          </informaltable>
        </figure>

        <para>Just like items under main menu
        <guimenuitem>"Insert"</guimenuitem>, items in the popup menu
        are context-sensitive. In particular, menu items that add
        interfaces appear only when object opened in the main window
        is either host or firewall (<xref
        linkend="popup-menu-insert">). You can add interface objects
        by hand (using menu item <guimenuitem>"Add
        Interface"</guimenuitem>) or import them via SNMP query (using
        menu item <guimenuitem>"Add Interfaces via SNMP"</guimenuitem>)
        </para>

      </sect2>

      <sect2>
        <title>Navigating Object Tree and Editing Objects</title>

        <para>Object selected in the tree automatically appears in the
        dialog area where it can be reviewed or modified. Objects are
        opened on a single mouse click in the tree. Clicking right
        button when mouse cursor is over object's label in the tree
        brings pop-up menu. This menu is context-sensitive and
        provides items for the following functions (<xref linkend="popup-menu-insert">):</para>

        <para>
          <itemizedlist>
            <listitem>
              <para>Duplicate:</para>

              <para>This function creates a copy of the current
              object, places it in the tree and opens it in the main
              window. The new object has generic name "New Object",
              but once you change the name and click
              <guibutton>"Apply"</guibutton>, its name will
              immediately change in the tree and branch it is located
              in will be sorted alphabetically. This means that once
              object's name changes, it "jumps" into another position
              in the tree branch to keep branch sorted..</para>
            </listitem>
            <listitem>
              <para>Copy:</para>

              <para>This copies an object into clipboard.</para>
            </listitem>
            <listitem>
              <para>Cut:</para>

              <para>This copies an object into clipboard and removes
              it from the tree.</para>
            </listitem>
            <listitem>
              <para>Paste:</para>

              <para>This creates new object which is a copy of the
              current content of the clipboard.</para>
            </listitem>
            <listitem>
              <para>Delete:</para>

              <para>This deletes an object without making a copy in
              the clipboard. This is unreversible operation and the
              program shows pop-up dialog, asking user to
              confirm. </para>
            </listitem>
            <listitem>
              <para>Where used:</para>

              <para>This scans the whole tree, including all groups
              and policies of all firewalls, looking for references to
              the current object. In the end the program shows pop-up
              dialog with icons corresponding to groups and firewalls
              that use current object. Double-clicking on the icon
              opens corresponding object in the main window.</para>
            </listitem>
          </itemizedlist>
        </para>

        <para>Pop-up menu can also have items to add interface and
        address objects, depending on what type of the object it is
        called for (<xref linkend="popup-menu-insert">).
        </para>

        <para>In general, GUI has been designed to "look and feel"
        like typical file browser (e.g. Windows Explorer). It shows
        object groups as a collection of icons, where each icon
        represents individual object (<xref
        linkend="group-view">). User can navigate between objects
        either using mouse, or keyboard "arrow" keys. Active object is
        highlighted with a different color. Douple-clicking on the
        icon in the group view opens corresponding object. Clicking
        right mouse button or spacebar on the keyboard opens pop-up
        menu, which acts as a shortcut to a frequently used operations
        such as "Open Object", "Copy","Cut" and "Paste" </para>

        <figure id="group-view" float="1">
          <title>Group View</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="group_view1.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>

        <para>Dialogs for objects that can be edited have buttons
        <guibutton>"Apply"</guibutton> and
        <guibutton>"Undo"</guibutton> at the bottom. Initially these
        buttons are inactive, but once object's parameters have been
        modified in the dialog, or group members have been added or
        removed, both buttons get activated so that user can click
        <guibutton>"Apply"</guibutton> to save new data, or
        <guibutton>"Undo"</guibutton> to reload original values into
        the dialog. If user tries to switch to another object without
        either saving or reloading data in the current dialog, the
        program shows pop-up dialog asking the user to take one of
        these actions. There is also an option to make the program
        automatically save modified data when user switches between
        objects, see <link linkend="gui-behavior">below</link>.
      </para>

      </sect2>
    </sect1>

<!-- *************************************************************** -->
    <sect1>
      <title>Working With Objects</title>

      <sect2>
        <title>Common Object Properties</title>

        <para>All objects visible to user have some common editable
        fields, such as their name and comment. Object name can
        contain white spaces and can be arbitrary long. Comment can
        contain any text you wish, of any length.</para>

        <para>Dialogs for those objects that can have address use
        standard GUI widget that visually separates four octets of IP
        address and provides "on the fly" control for the validity of
        an address.</para>

      </sect2>

      <sect2>
        <title>Host Object</title>

        <para>Host object in Firewall Builder is designed to represent
        real hosts on the network: workstations, servers and any other
        network node with an address. Just like real hosts, host
        object can have interfaces, which in turn have addresses. Both
        interfaces and addresses are represented by objects, which are
        organized into a tree-like hierarchy. This way, interface
        object is sitting in the tree directly under host and address
        objects are located under interfaces. Just like in real
        computers, in Firewall Builder interface can have either one or
        multiple addresses. An example of a host with one interface,
        which has multiple addresses is shown on <xref
        linkend="host-in-tree">. In fact host may even have interface
        with no addresses at all. We will go over features of
        interface and address objects below.
        </para>

        <figure id="host-in-tree" float="1">
          <title>Host Object With One Interface And Multiple Virtual Addresses </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="host_in_tree.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>


        <note>
          <para>host object can not have any security or Network
          Address Translation policy associated with it; only firewall
          objects can have it.</para>
        </note>

        <para>Host object dialog is split onto two tabs: "General"
        (<xref linkend="host-dialog1">) and "Sysinfo" (<xref
        linkend="host-dialog2">). </para>

        <figure id="host-dialog1" float="1">
          <title>Editing Host Object</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="host_dialog1.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>

        <para>Tab "General" provides GUI controls for the following parameters:</para>

        <para>
<itemizedlist>
            <listitem>
              <para>Name:</para>

              <para>Host object name.</para>
            </listitem>
            <listitem>
              <para>MAC address filtering:</para>

              <para>If this option is activated, policy compiler uses
              MAC addresses of all interfaces of this host instead of
              their IP addresses to build firewall rules.  Not all
              firewall platforms support MAC address filtering, so
              this option may have no effect on the generated firewall
              script. This is treated as non-critical situation and
              policy compiler will only generate warning while
              processing firewall policy where such host is
              used.</para>
            </listitem>
            <listitem>
              <para>SNMP communities:</para>

              <para>SNMP 'read' community is used if host runs SNMP
              agent and you pull hosts "sysinfo" variables via SNMP
              query. SNMP 'write' community currently is not used but
              we may add features using it in the future.  SNMP
              communities usually can not contain spaces. If your host
              does not run SNMP agent, or you do not need to pull host
              info using SNMP, then SNMP community strings may be left
              blank.</para>

            </listitem>
            <listitem>
              <para>Comment:</para>

              <para>This is free-form text field which can be used to
              add comments.</para>
            </listitem>
          </itemizedlist>
        </para>

        <figure id="host-dialog2" float="1">
          <title>Host Object System Information</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="host_dialog2.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>

        <para>Tab "Sysinfo" holds data retrieved from the host via
        SNMP query. There you can see strings that host returned for
        standard SNMP MIB variables "Description", "Location" and
        "Contact". These fields are read-only in the GUI.</para>

      </sect2>

      <sect2 id="host-interface">
        <title>Host's Interface</title>

        <figure id="host-interface1" float="1">
          <title>Host's Interface</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="host_interface1.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>

        <para>Dialog for interface object that belongs to host has
        only one tab named "General", which provides controls for the
        following parameters:</para>

        <para>
          <itemizedlist>
            <listitem>
              <para>Name</para>

              <para>This is the name of the object. Usually it should
              be the real interface's name. For example, on Linux this
              could be 'eth0' or 'eth1', on FreeBSD this could be
              'lnc0' or 'fxp0', on Solaris this could be 'hme0', on
              Cisco PIX it could be 'ethernet0' and so on.</para>
            </listitem>
            <listitem>
              <para>Label</para>

              <para>On most OS this field is not used and serves a
              pupose of a descriptive label. Firewall Builder GUI uses
              label, if it is not blank, to show interfaces in the
              tree. One of the suggested uses for this field is to
              mark interfaces to reflect network topology ('outside',
              'inside') or purpose ('web frontend' or 'backup
              subnet'). Label is mandatory for Cisco PIX though, where
              it must reflect network topology. See below in the
              chapter describing interfaces of the firewall </para>
            </listitem>
            <listitem>
              <para>Checkbox "Address is dynamic"</para>

              <para>Use this option if interface has dynamic address
              (obtained by means of DHCP or PPP or other protocol); in
              this case an address is unknown at the moment when
              Firewall Builder generates firewall policy.</para>
            </listitem>
            <listitem>
              <para>Checkbox "This is management interface"</para>

              <para>Sometimes host has several network interfaces in
              which case one of them can be marked as 'management
              interface'. Management interface is used for all
              communication between Firewall Builder and the host. In
              case of host object this communication is currently
              limited to SNMP query to pull host information (standard
              SNMP MIB variables 'Description', 'Location',
              'Contact'), however in the future we will add
              more.</para>
            </listitem>
            <listitem>
              <para>Physical (MAC) Address</para>

              <para>This field holds interface's MAC address.</para>
            </listitem>
            <listitem>
              <para>Comment</para>

              <para>This is a free-form text field for a comment.</para>
            </listitem>
          </itemizedlist>
        </para>
      </sect2>

      <sect2>
        <title>Address Object</title>

        <figure id="address1" float="1">
          <title>Address Object</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="address1.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>

        <para>Address object describes IP address of the interface;
        its dialog provides the following entry fields:</para>

        <para>
          <itemizedlist>
            <listitem>
              <para>Name</para>

              <para>This is the name of the object.</para>

              <note>
                <para> It is recommended that you use some descriptive
                name because when address object is used in firewall
                policy, it is labeled with this name. It may be hard
                to tell one address from another if their names are
                similar. </para>
              </note>
            </listitem>
            <listitem>
              <para>Address</para>

              <para>This is an IP address. GUI widget visually
              separates octets and provides syntax control for the
              values entered in the octet fields.</para>
            </listitem>
            <listitem>
              <para>Netmask</para>

              <para>This is a netmask assigned to the interface.</para>
            </listitem>
            <listitem>
              <para>Comment</para>

              <para>This is free-form text field for a comment.</para>
            </listitem>
          </itemizedlist>
        </para>
      </sect2>

      <sect2>
        <title>Network Object</title>

        <figure id="network-dialog1" float="1">
          <title>Network Object</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="network_dialog1.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>

        <para>Network object describes IP network or a subnet; its
        dialog provides the following entry fields:</para>

        <para>
          <itemizedlist>
            <listitem>
              <para>Name:</para>

              <para>Network object name</para>
            </listitem>
            <listitem>
              <para>Button 'DNS Lookup':</para>

              <para>Clicking on this button runs DNS query for an "A"
              RR using the name entered in the field "Name"</para>
            </listitem>
            <listitem>
              <para>Address:</para>

              <para>This is an address of the network</para>
            </listitem>
            <listitem>
              <para>Netmask:</para>

              <para>Netmask, in combination with an Address, defines
              subnet.</para>
            </listitem>
            <listitem>
              <para>Comment:</para>

              <para>This is free-form text field used for comments</para>
            </listitem>
          </itemizedlist>
        </para>
      </sect2>

      <sect2>
        <title>Address Range Object</title>

        <figure id="address-range-dialog1" float="1">
          <title>Network Object</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="address_range_dialog1.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>

        <para>Address Range object describes a continuous range of IP
        addresses; its dialog provides the following entry fields:</para>

        <para>
          <itemizedlist>
            <listitem>
              <para>Name:</para>

              <para>The name of the Address Range object</para>
            </listitem>
            <listitem>
              <para>Range start:</para>

              <para>The address of the start of the range</para>
            </listitem>
            <listitem>
              <para>Range end:</para>

              <para>the address of the end of the range</para>
            </listitem>
            <listitem>
              <para>Comment:</para>

              <para>Free-form text field used for comments</para>
            </listitem>
          </itemizedlist>
        </para>

        <para>Both range start and range end addresses are included in
        the range.</para>
      </sect2>

      <sect2>
        <title>Group of Objects</title>

        <figure id="group-dialog1" float="1">
          <title>Group Object</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="group_dialog1.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>

        <para>Group of Objects holds references to Hosts, Networks,
        Address Ranges, Firewalls and other groups of objects (<xref
        linkend="group-dialog1">). Objects can be added to the group
        using the following methods:
        </para>

        <para>
          <itemizedlist>
            <listitem>
              <para>Using drag and drop:</para>

              <para>Objects can be dragged from the tree into the
              group dialog. The tree switches to the object on a
              single click, however pointing a mouse cursor at the
              object and then pressing the button does not switch, but
              rather allows to start drag and drop operation. </para>
            </listitem>
            <listitem>
              <para>Using popup menu:</para>

              <para>You can use "Copy"/"Paste" operations between the
              tree and group dialog. Right mouse click on the object
              in the tree brings pop-up menu. Choose item "Copy" or
              "Cut" in this menu, then switch to the group dialog and
              right mouse click in the icon field. This also brings
              pop-up menu, where you choose item "Paste". This inserts
              reference to the object in the group.</para>
            </listitem>
            <listitem>
              <para>Using maun menu "Edit":</para>

              <para>Just like in case of pop-up menu, select object in
              the tree, then use main menu
              <guimenuitem>"Edit"</guimenuitem>/<guimenuitem>"Copy
              Object"</guimenuitem>, then switch to the group dialog
              and use main menu
              <guimenuitem>"Edit"</guimenuitem>/<guimenuitem>"Paste
              Object"</guimenuitem>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </sect2>

      <sect2>
        <title>Firewall Object</title>

        <figure id="firewall-dialog-general" float="1">
          <title>Firewall Object, tab 'General'</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="firewall_dialog_general.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>

        <para>Firewall Object represents firewall machine and is the
        most complex object in Firewall Builder. Its dialog has the
        following tabs: 'General', 'Sysinfo', 'Compile/Install',
        'Firewall', 'Network'</para>

        <para>
          Tab <emphasis>General</emphasis> provides the following controls:
        </para>

        <para>
          <itemizedlist>
            <listitem>
              <para>Name:</para>

              <para>This is the name of the object</para>
            </listitem>
            <listitem>
              <para>Host OS:</para>

              <para>Modules that provide support for target OS and
              firewall platforms are distributed separately from the
              GUI and can be installed in a various combinations. This
              pull-down menu provides choice of the host OS and is
              dynamically updated depending on the combination of
              installed modules. </para>
            </listitem>
            <listitem>
              <para>Firewall platform:</para>

              <para>Like "Host OS" menu, this pull-down menu provides
              choice of the target firewall platform and is
              dynamically updated depending on a combination of
              installed modules.</para>
            </listitem>
            <listitem>
              <para>SNMP Communities:</para>

              <para>SNMP community "read" is used to pull "sysinfo"
              MIB variables from the firewall machine, provided it
              runs SNMP agent. It is also used if you want to
              automatically create interfaces for the firewall using
              SNMP query. SNMP community "write" is not used at this
              time.</para>
            </listitem>
            <listitem>
              <para>Comment:</para>

              <para>This is free-form text field used for comments</para>
            </listitem>
          </itemizedlist>
        </para>

        <figure id="firewall-dialog-sysinfo" float="1">
          <title>Firewall Object, tab 'Sysinfo'</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="firewall_dialog_sysinfo.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>

        <para>
          This tab holds the following fields:
        </para>

        <para>
           <itemizedlist>
            <listitem><para>Description:</para></listitem>
            <listitem><para>Location:</para></listitem>
            <listitem><para>Contact:</para></listitem>
          </itemizedlist>
        </para>

        <para>These fields present values of corresponding MIB
        variables.</para>

        <figure id="firewall-dialog-compile" float="1">
          <title>Firewall Object, tab 'Compile/Install'</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="firewall_dialog_compile.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>

        <para>
          This tab holds the following fields:
        </para>

        <para>
          <itemizedlist>
            <listitem>
              <para>Compiler:</para>

              <para>The full directory path and file name for the
              policy compiler program that the GUI invokes when you
              use main menu item
              <guimenuitem>"Rules"</guimenuitem>/<guimenuitem>"Compile"</guimenuitem>. If
              this field is left blank, then the GUI calls default
              policy compiler program which is preconfigured for the
              firewall platform chosen in the tab 'General'. Use this
              field if you use non-standard policy compiler, or if you
              use wrapper script which calls policy compiler.</para>
            </listitem>
            <listitem>
              <para>Command line parameters for compiler:</para>

              <para>This is where you can specify command line
              parameters for the policy compiler. Normally the GUI
              supplies minimal necessary set of options, such as "-f"
              for the data file name and "-d" for the working
              directory. You may want to add "-v" here to turn on
              verbose output of the policy compiler. See man page for
              the corresponding policy compiler for the complete set
              of supported command line options.
              </para>
            </listitem>
            <listitem>
              <para>Installer: install script</para>

              <para>In the future there will be two ways to install
              and activate policy on the firewall machine: using
              install script or fwbd daemon. The daemon is not
              supported yet, so install script is the only method
              available at this time. The GUI calls install script
              when you use main menu item
              <guimenuitem>"Rules"</guimenuitem>/<guimenuitem>"Install"</guimenuitem></para>
            </listitem>
            <listitem>
              <para>Istaller: fwbd daemon:</para>

              <para><emphasis>Not supported</emphasis></para>
            </listitem>
            <listitem>
              <para>Policy install script:</para>

              <para>The full directory path and file name for the
              install script.</para>
            </listitem>
            <listitem>
              <para>Command line parameters for the script:</para>

              <para>This is where you specify command line parameters
              for the install script. Normally GUI supplies two
              command line paremeters for the script: "-f" for the
              data file name and "-d" for the working directory. You
              can add more parameters in this entry field if your
              script supports them.</para>
            </listitem>
            <listitem>
              <para>Options for fwbd:</para> 

              <para>Since current version of Firewall Builder does not
              come with fwbd and does not support it yet, these
              options are reserved for future use.</para>
            </listitem>
          </itemizedlist>
        </para>

        <para>Tabs <emphasis>'Firewall'</emphasis> and
        <emphasis>'Network'</emphasis> provide fields specific to the
        chosen firewall platform and host OS configurations. See <xref
        linkend="tab-firewall"> for the description of the dialogs for
        all supported firewall platforms and <xref
        linkend="tab-network"> for the description of the dialogs for
        supported target host OS.
        </para>
      </sect2>

      <sect2>
        <title>Firewall's Interface</title>

        <figure id="firewall-interface1" float="1">
          <title>Interface Object that belongs to firewall</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="firewall_interface1.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>

        <para>Dialog for the interface object that belongs to a
        firewall is similar to that for the Host's interface (<xref
        linkend="host-interface">) but has few extra controls.
        </para>

        <para>Interfaces of the firewall have a parameter called
        <emphasis>"Security Level"</emphasis>. Depending on the
        firewall platform, security level may either have two values
        <emphasis>"External"/"Internal"</emphasis> or a numeric value
        in the range between 0 and 100, with 0 being least secure and
        100 being most secure levels. GUI dialog adjusts automatically
        and shows appropriate controls depending on the choice of the
        firewall platform in the interface's parent firewall object.
        </para>

        <para><xref linkend="firewall-interface1"> shows a screenshot
        of the dialog for the interface object that belongs to
        iptables firewall object named "firewall-iptables". <xref
        linkend="firewall-interface2"> shows a screenshot of the
        dialof for the interface object that belongs to Cisco PIX
        firewall object named "firewall-pix".
        </para>

        <figure id="firewall-interface2" float="1">
          <title>Interface with numeric Security Level </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="firewall_interface2.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>

        <para>Another platform-specific parameter of the interface is
        a reference to Network Zone. Currently only Cisco PIX firewall
        requires Network Zone. Dialog shows controls for the Network
        Zone in a separate tab (<xref linkend="firewall-interface3">),
        which appears only if the parent firewall object specifies
        firewall platform which requires it. GUI dynamically generates
        pull-down menu with all available network and group objects
        and puts it in the Network Zone dialog. You need to choose one
        object in the menu. Usually external interface (the one which
        connects your firewall to the Internet) has Network Zone set
        to <emphasis>"Any"</emphasis>. It is also recommended to
        create a group objects to represent Network Zones of all other
        interfaces of the firewall.</para>

        <figure id="firewall-interface3" float="1">
          <title>Network Zone dialog</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="firewall_interface3.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>


        <para><xref linkend="platform-specific-interface-parameters">
        shows values for Security Level and Network Zone parameters
        for supported firewall platforms.</para>

        <table pgwide="0" id="platform-specific-interface-parameters">
          <title></title>
          <tgroup cols="3">
            <thead>
              <row>
                <entry><para>Firewall Platform</para></entry>
                <entry><para>Security Level Values</para></entry>
                <entry><para>Network Zone</para></entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry><para>iptables</para></entry>
                <entry><para>External/Internal</para></entry>
                <entry><para>N/A</para></entry>
              </row>
              <row>
                <entry><para>ipfilter</para></entry>
                <entry><para>External/Internal</para></entry>
                <entry><para>N/A</para></entry>
              </row>
              <row>
                <entry><para>pf</para></entry>
                <entry><para>External/Internal</para></entry>
                <entry><para>N/A</para></entry>
              </row>
              <row>
                <entry><para>Cisco PIX</para></entry>
                <entry><para>numeric, 0 - 100</para></entry>
                <entry><para>a reference to a group or network object</para></entry>
              </row>
            </tbody>
          </tgroup>
        </table>

      </sect2>

      <sect2 id="global-policy">
        <title>Global Firewall Policy</title>

        <figure id="global-policy1" float="1">
          <title>Global Policy</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="global_policy.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>

        <para>Firewall policy consists of a set of rules. Packets are
        analysed by comparing their parameters with rules in the
        policy, inspecting rules in the orderly manner from top to
        bottom. The first rule that matches packet is used. Each rule
        includes a standard set of parameters, or <emphasis>Rule
        Elements</emphasis>, which are used to compare data packet
        with, such as "Source", "Deestination", "Service",
        "Direction". If rule is part of the Interface Policy (<xref
        linkend="interface-policy">), then the interface it belongs to
        acts as yet another parameter. For example, if packet entering
        the firewall has source address which matches object in the
        "Source" field of the rule, and its destination address
        matches object in "Destination", and its protocol and port
        numbers match object in field "Service", and its direction
        matches that specified in the field "Direction", then the
        firewall will take an action, specified in the field "Action"
        of the matching rule. In case of Interface rule, firewall will
        also take into account interface through wich packet had
        entered or through which it is about to leave the
        fireall.</para>

        <para>For example on <xref linkend="global-policy1"> rule#0
        says that all fragmented packets should be dropped (rule uses
        service object <emphasis>ip_fragments</emphasis> and action
        <emphasis>Deny</emphasis>). Rule #1 says that connections from
        internal network (object <emphasis>internal-net</emphasis>) to
        the firewall itself (object <emphasis>firewall-pix</emphasis>)
        using protocols <emphasis>telnet</emphasis> and
        <emphasis>ssh</emphasis> are allowed (action
        <emphasis>Accept</emphasis>). "Catch all" rule #8 denies all
        packets that have not been matched by any other rule above
        it. The global policy on <xref linkend="global-policy1"> is
        built so that to allow only specific services and deny
        everything else, which is a good practice.
        </para>

        <para><xref linkend="rule-elements"> lists rule elements
        available in the policy, depending on the chosen target
        firewall platform.
        </para>
      </sect2>

      <sect2 id="interface-policy">
        <title>Interface Policy</title>

        <figure id="interface-policy1" float="1">
          <title>Interface Policy for iptables firewall</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="interface_policy1.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>

        <figure id="interface-policy2" float="1">
          <title>Interface Policy for Cisco PIX firewall</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="interface_policy2.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>

        <para>Each firewall's interface may have security policy
        associated with it. Different firewalls require different
        commands to attach policy rule to the firewall, but policy
        compilers take care of that and generate appropriate
        code. Interface Policy, consists of a set of rules; each rule
        has the same rule elements as a Global Policy rule and adds
        some additional ones. </para>

        <para>On <xref linkend="interface-policy1"> rule #0 (so called
        Anti-spoofing rule) says that all packets which enter
        firewalls interface eth0 (direction is
        <emphasis>"Inbound"</emphasis>) and have their source address
        match either internal network or dmz network or any address
        that belongs to the firewall itself, should be dropped and
        record should be made in the log (because there is a "notebook
        and pencil" icon in the <emphasis>"Options"</emphasis> rule
        element). 
        </para>
      </sect2>

      <sect2>
        <title>Network Address Translation Rules</title>

        <figure id="nat-policy" float="1">
          <title>Network Address Translation Rules</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="nat_policy.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>

        <para>Just like firewall policy, Network Address Translation
        (NAT) rules are inspected by the firewall in the order they
        appear in the NAT policy. Each NAT rule consists of the
        following rule elements:</para>

        <para>
          <itemizedlist>
            <listitem><para>Original Source</para>

              <para>This is the object which the source address of
              original packet should match for it to be translated by
              this rule </para>
            </listitem>
            <listitem><para>Original Destination</para>

              <para>This is the object which the destination address
              of original packet should match for it to be translated
              by this rule </para>
            </listitem>
            <listitem><para>Original Service</para>

              <para>This is the service which original packet should
              match to be translated by this rule</para>
            </listitem>
            <listitem><para>Translated Source</para>

              <para>This object defines the address which sould be
              used to substitute original packet's source address
              </para>
            </listitem>
            <listitem><para>Translated Destination</para>

              <para>This object defines the address which should be
              used to substitute destination address in the original
              packet.</para>
            </listitem>
            <listitem><para>Translated Service</para>

              <para>This object defines the protocol and port numbers
              which should be used to substitute those parameters in
              the original packet</para>
            </listitem>
            <listitem><para>Comment</para>
            </listitem>
          </itemizedlist>
        </para>

        <para>Here is how it works:</para>

        <para>Original packet is compared with NAT rules, one at a
        time, starting with the topmost rule. Once the rule which
        matches packet's source and destination addresses and service
        is found, firewall takes parameters from the second half of
        that rule and makes substitutions for source and destination
        addresses and port numbers. Some rule elements in the first
        half of the rule may be left empty (they show "Any" in this
        case), these elements match any value of corresponding
        parameter of the packet.  Some rule elements in the second
        half of the rule may also be left empty (in which case GUI
        shows word "Original" in thie rule element). This tells the
        firewall that no substitution should happen for those
        elements. </para>

        <para>In fact firewall not only substitutes addresses and port
        numbers, it also makes a record in its internal table to
        remember the original packet and translated packet it just
        produced. This way firewall can perform reverse translation
        when reply packet comes back. </para>

        <para>The NAT rules on the screenshot <xref
        linkend="nat-policy"> tell the firewall to do the
        following:</para>

        <para>
          <itemizedlist>
            <listitem>
              <para>Rule #0:</para>

              <para>If original packet has destination address which
              matches the addresses of an external interface of the
              firewall object "firewall-iptables" and protocol TCP and
              port 80 (matches service "http", protocol used by web
              servers), then its destination address should be changed
              to that of the object "mail server" and service should
              be left the same. Note that this wule would have had the
              same effect if "Translated Service" was left
              "Original".</para>
            </listitem>
            <listitem>
              <para>Rule #1:</para>

              <para>This rule is very much the same as #0, except it
              works for packets headed for TCP port 25 (service "smtp"
              which describes protocol used to send and receive
              Internet email)</para>
            </listitem>
            <listitem>
              <para>Rule #2:</para>

              <para>This rule is like #0 and #1, except it works for
              service "ssh"</para>
            </listitem>
            <listitem>
              <para>Rule #3:</para>

              <para>This rule follows the same pattern as #0-2, but
              translates packets headed for external firewall's
              address, TCP port 2222 and sends them to the standard
              TCP port that belongs to service "ssh" on internal
              machine "build server". This rule illustrates that you
              can simultaneously translate both addresses and
              services: it makes change to destination address of the
              packet and the service.</para>
            </listitem>
            <listitem>
              <para>Rule #4:</para>

              <para>This rule matches packets that originated on
              internal network (object "internal-net") and headed for
              DMZ net (object "dmz-net"). Since all rule elements in
              the second half of the rule are left blank, this rule
              tells firewall that no translation is needed for these
              packets.</para>
            </listitem>
            <listitem>
              <para>Rule #5:</para>

              <para>This rule defines another type of translation: all
              packets originated on either internal network or on DMZ
              net, going to any destination, should have their source
              address replaced with address of firewall's external
              interface. This type of translation rule sometimes is
              called "Masuqerading" rule.</para>
            </listitem>
          </itemizedlist>
        </para>

        <para>Some firewall platforms support negation in NAT
        rules. If it is supported, this feature can be activated
        through pop-up menu <xref linkend="editing-policy2"> that
        appears when you click right mouse button on the rule element
        in NAT rule. <xref linkend="rule-elements"> shows what
        firewall platforms support negation in NAT.</para>

        <para>See below in "Tutorial" for detailed discussion of
        different types of NAT rules.</para>

        <para>You can create NAT rules and edit them using the same
        methods as described in <xref linkend="editing-policy-and-nat"></para>

      </sect2>

      <sect2 id="editing-policy-and-nat">
        <title>Editing firewall Policy and NAT Rules</title>

        <sect3>
          <title>Adding and removing rules</title>

          <figure id="editing-policy1" float="1">
            <title>Modifying Policy rules</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="editing_policy1.jpg" format="jpg" align="Left" scale="25">
              </imageobject>
            </mediaobject>
          </figure>

          <para>Rules can be added, removed or moved around in the
          policy using commands in a popup menu which appears if you
          click right mouse button on the rule element "Num" (the very
          first rule element, counting from the left). Screenshot
          <xref linkend="editing-policy1"> illustrates this
          menu. </para>

          <para>This menu allows for adding new rule above or below of
          the currently selected rule in the policy, removing rule,
          moving current rule up and down, plus usual
          <guimenuitem>"Copy"</guimenuitem>/<guimenuitem>"Paste"</guimenuitem>
          operations done on policy rules.</para>

          <para>Functions of this pop-up menu are also duplicated in
          the main menu <guimenuitem>"Rules"</guimenuitem></para>

          <para>You can also use drag and drop operation to move rules
          up and down in the policy. Just drag the rule with the mouse
          by its "number" rule element.</para>
        </sect3>

        <sect3>
          <title>Adding, removing and modifying object in the policy and NAT rules</title>

          <para>To add objects to the policy or NAT rule you can
          either drag them from the tree and drop into corresponding
          rule element, or use
          <guimenuitem>"Copy"</guimenuitem>/<guimenuitem>"Paste"</guimenuitem>
          operation. Object can be copied into clipboard both from the
          tree and from another policy rule, in both cases use pop-up
          menu or main menu <guimenuitem>"Edit"</guimenuitem>.</para>

          <para>clicking right mouse button when cursor is over rule
          element "Source","Destination" or "Service" brings
          context-sensitive pop-up menu <xref
          linkend="editing-policy2">. The same pop-up menu appears
          when you do that over "Original Source", "Original
          Destination", "Original Service", "Translated Source",
          "Translated Destination" and "Translated Service" rule
          elements in the NAT rule. </para>

          <figure id="editing-policy2" float="1">
            <title>Modifying Object in the Policy Rule</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="editing_policy2.jpg" format="jpg" align="Left" scale="25">
              </imageobject>
            </mediaobject>
          </figure>

          <para>This menu provides items for the following functions:</para>

          <para>
          <itemizedlist>
              <listitem>
                <para>Edit:</para>

                <para>this menu item opens currently selected object in the dialog</para>
              </listitem>
              <listitem>
                <para>Edit in a new window:</para>

                <para>This menu items creates new main window and opens
              currently selected object in it. If more than one main
              window currently exists, object will be opened in one of
              the existing windows.</para>
              </listitem>
              <listitem>
                <para>Copy:</para>

                <para>Object is copied into clipboard.</para>
              </listitem>
              <listitem>
                <para>Cut:</para>

                <para>Object is copied into clipboard and removed from the rule.</para>
              </listitem>
              <listitem>
                <para>Paste:</para>

                <para>Object is copied from the clipboard to the rule.</para>
              </listitem>
              <listitem>
                <para>Negate:</para>

                <para>All objects in the selected rule element are
                negated. Rule element "Source" is negated in the rule
                #1 on screenshot <xref linkend="editing-policy2"> </para>
              </listitem>
            </itemizedlist>
        </para>

        </sect3>

        <sect3>
          <title>Changing rule action</title>

          <para>clicking right mouse button when cursor is over rule
          element "Action" brings context-sensitive pop-up menu <xref
          linkend="editing-policy3">.</para>

          <figure id="editing-policy3" float="1">
            <title>Modifying Action of the Policy Rule</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="editing_policy3.jpg" format="jpg" align="Left" scale="25">
              </imageobject>
            </mediaobject>
          </figure>

          <para>This menu provides items for the following functions:</para>

          <itemizedlist>
            <listitem>
              <para>Accept:</para>

              <para>Rule will accept packet matching it</para>
            </listitem>
            <listitem>
              <para>Deny:</para>

              <para>Rule will drop packet matching it</para>
            </listitem>
            <listitem>
              <para>Reject:</para>

              <para>Rule will drop packet matching it, and will also
            send appropriate ICMP responce message back to
            source.</para>
            </listitem>
          </itemizedlist>

        </sect3>

        <sect3>
          <title>Changing rule direction</title>

          <para>clicking right mouse button when cursor is over rule
        element "Direction" brings context-sensitive pop-up menu <xref
                                                                       linkend="editing-policy4">.</para>

          <figure id="editing-policy4" float="1">
            <title>Modifying Direction of the Policy Rule</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="editing_policy4.jpg" format="jpg" align="Left" scale="25">
              </imageobject>
            </mediaobject>
          </figure>

          <para>This menu provides items for the following functions:</para>

          <itemizedlist>
            <listitem>
              <para>Inbound:</para>

              <para>Rule matches packets entering firewall</para>
            </listitem>
            <listitem>
              <para>Outbound:</para>

              <para>Rule matches packet exiting firewall</para>
            </listitem>
            <listitem>
              <para>Both:</para>

              <para>Rule matches both entering and exiting packets</para>
            </listitem>
          </itemizedlist>

        </sect3>

        <sect3>
          <title>Changing rule options and logging</title>

          <para>clicking right mouse button when cursor is over rule
          element "Options" brings context-sensitive pop-up menu <xref
          linkend="editing-policy5">.</para>

          <figure id="editing-policy5" float="1">
            <title>Modifying Options of the Policy Rule</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="editing_policy5.jpg" format="jpg" align="Left" scale="25">
              </imageobject>
            </mediaobject>
          </figure>

          <para>This menu provides items for the following functions:</para>

          <itemizedlist>
            <listitem>
              <para>Modify Options:</para>

              <para>This menu items brings dialog which allows you to
              modify certain options specific to the target firewall
              platform and associated only with current rule. See
              <xref linkend="policy-rule-options-dialogs"> for
              detailed explanation. </para>
            </listitem>
            <listitem>
              <para>Turn logging ON:</para>

              <para>Turns logging on for all packets matching this
              rule. If target firewall platform does not support
              selective logging of packets, this menu item is
              disabled.</para>
            </listitem>
            <listitem>
              <para>Turn logging OFF:</para>

              <para>Turn logging off for packets matching this rule.
              If target firewall platform does not support selective
              logging of packets, this menu item is disabled.</para>
            </listitem>
          </itemizedlist>

        </sect3>

      </sect2>



      <sect2 id="rule-elements">
        <title>Support for Rule Elements and Features on Various Firewalls</title>

        <para>Certain fields in the rules are only available if target
        firewall platform supports them.  For example, iptables
        firewall provides controls for logging of matched packets,
        while Cisco PIX does not and always logs every packet it
        drops. Where possible, policy compilers try to emulate missing
        feature. For example, OpenBSD PF does not support negation
        natively, but policy compiler provides a workaround and tries
        to emulate this feature for PF. Another example is policy
        rules with direction "Outbound". Cisco PIX supports only
        inbound Access Lists, so policy compiler emulates outbound
        Access Lists when generates configuration for PIX. <xref
        linkend="policy-rule-elements"> represents list of fields in
        the rules and what firewall platforms support
        them. Information about these fields and features is available
        for fwbuilder GUI which disabled corresponding menu items and
        hides corresponding policy elements when they are not
        supported.</para>

        <para>
          <table id="policy-rule-elements">
            <title></title>
            <tgroup cols="11">
              <thead>
                <row>
                  <entry>Firewall Platform</entry>
                  <entry>Source</entry>
                  <entry>Destination</entry>
                  <entry>Service</entry>
                  <entry>Time Interval</entry>
                  <entry>Direction</entry>
                  <entry>Action</entry>
                  <entry>Logging/ Options</entry>
                  <entry>Comment</entry>
                  <entry>Negation in Policy rules</entry>
                  <entry>Negation in NAT rules</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry>iptables</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                </row>
                <row>
                  <entry>ipfilter</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>-</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>-</entry>
                </row>
                <row>
                  <entry>pf</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>-</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                </row>
                <row>
                  <entry>Cisco PIX</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>-</entry>
                  <entry>+</entry>
                  <entry>+</entry>
                  <entry>-</entry>
                  <entry>+</entry>
                  <entry>-</entry>
                  <entry>-</entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </para>

      </sect2>
    </sect1>

<!-- *************************************************************** -->
    <sect1>
      <title>Network Discovery: A Quick Way to Create Objects</title>

      <figure id="discovery-menu" float="1">
        <title>Calling Object Discovery Druid</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="discovery_menu.jpg" format="jpg" align="Left" scale="25">
          </imageobject>
        </mediaobject>
      </figure>
      
      <para>One of the distinguishing features that Firewall Builder
      provides is a support for automated creating of objects. This
      helps populate objects tree for large networks with lots of
      hosts and subnets. It would have taken hours if user always had
      to do it manually, while Objects Discovery Druid helps complete
      this task in minutes. You can bring this Druid using main menu
      <guimenuitem>"Tools"</guimenuitem>/<guimenuitem>"Discover
      Objects"</guimenuitem> </para>

      <para>Druid supports three main methods for automated creation
      of objects:</para>

      <para>
        <itemizedlist>
          <listitem><para>Reading file /etc/hosts</para></listitem>
          <listitem><para>Import of DNS zone</para></listitem>
          <listitem><para>Network discovery using SNMP queries</para></listitem>
        </itemizedlist>
      </para>

      <para>You make a choice of the method on the first page of the
      Druid <xref linkend="discovery-page1"></para>

      <figure id="discovery-page1" float="1">
        <title>Calling Object Discovery Druid</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="discovery_page1.jpg" format="jpg" align="Left" scale="25">
          </imageobject>
        </mediaobject>
      </figure>
      
      <para>Just check the radio-button next to the method you want to
      use and click button <guibutton>'Next'</guibutton></para>

      <sect2>
        <title>Reading file /etc/hosts</title>

        <para>This method imports host records present in standard
        file /etc/hosts or any other file that contain records in the
        following format (this format is actually described in a man
        page hosts(5)).</para>

        <para>IP_Address   host_name</para>

        <para>IP address must be separated from the host name with any
        number of whitespaces or tab symbols. Lines starting with '#'
        are considered comments and are ignored. Currently Firewall
        Builder does not support ipv6 addresses and ignores
        them.</para>

        <para>When you chose import from /etc/hosts on the first page,
        Druid asks you for the file path and name on the next
        page. Once that information is entered, it reads contents of
        that file and presents the table of new objects (<xref
        linkend="discovery-hosts-2">):</para>

        <figure id="discovery-hosts-2" float="1">
          <title>Creating objects using gathered information</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="discovery_hosts_2.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>
      
        <para>This page of the druid is the same for all discovery
        methods, so let's discuss it in detail.</para>

        <para>Discovered objects are presented in the table. Since
        source of information used for discovery could have had
        different host names for the same IP address, object names are
        presented in a pull-down menu. If there was only one name for
        the address, then pull-down menu has only one entry, otherwise
        it has several entries. The rightmost column in the table
        presents choices of the object type to be created: it can
        become either Host, or Network, or Firewall. Sometimes Druid
        can guess the type of the object or use proper type depending
        on the discovery method used.</para>

        <para>Druid creates objects only for selected records in the
        table. Use checkbox in the very first column of the table to
        select objects. Comment to the right shows total number of
        selected objects at any given moment (text "Selected: N
        objects"). 6 objects are selected on screenshot <xref
        linkend="discovery-hosts-2">
        </para>

        <para>This page of the Druid also has following buttons:</para>

        <para>
          <itemizedlist>
            <listitem>
              <para><guibutton>"Select All"</guibutton></para>

              <para>Selects all records in the table</para>
            </listitem>
            <listitem>
              <para><guibutton>"Unselect All"</guibutton></para>

              <para>Unselects all records in the table</para>
            </listitem>
            <listitem>
              <para><guibutton>"Filter"</guibutton></para>

              <para>Brings up filter dialog. Filtering helps manage
              long lists of objects.</para>
            </listitem>
            <listitem>
              <para><guibutton>"Remove Filter"</guibutton></para>

              <para>Removes currently applied filter and shows all
              records in the table</para>
            </listitem>
          </itemizedlist>
        </para>

        <figure id="discovery-hosts-filter" float="1">
          <title>Filter Dialog</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="discovery_hosts_filter.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>      

        <para>Druid can filter records in the table either by their
        address or by their name or by both. To filter by address
        enter part of it in the field "Address". The program compares
        text entered in the filter dialog with an address in the table
        and shows only those records whose address starts with the
        text of the filter. For example, to filter out only hosts with
        addresses on the net 10.3.14.0 we could use filter
        "10.3.14". Likewise, to remove hosts "bear" and "beaver"
        (addresses 10.3.14.50 and 10.3.14.74) we could use filter
        "10.3.14.6". Note that filter string does not contain any
        wildcard symbols like "*". Filter shows only records that have
        address which literary matches filter string.
        </para>

        <para>Filtering by the object name uses regular expressions
        syntax described in a man page regex(7). For example, to find
        all records whose names start with 'f' we could use regular
        expression '^f'. Symbol '^' matches beginning of the string,
        so this regular expression matches any name that starts with
        'f'. To find all names that end with 'domedomain.com', we
        could use regular expression '.*somedomain.com$' </para>

      </sect2>

      <sect2>
        <title>DNS zone import</title>

        <para>This method works only on those OS where there is a
        library supporting DNS zone transfers. Currently it is
        available on Linux and Solaris. </para>

        <para>First, Druid asks you for the domain name you wish to
        import (<xref linkend="discovery-dns-domain">)</para>

        <figure id="discovery-dns-domain" float="1">
          <title>Entering domain name</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="discovery_dns_domain.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>      

        <para>Once domain name is entered and you click
        <guibutton>"Next"</guibutton>, the program runs first DNS
        query to find out what name servers are responsible for that
        domain. It then presents the list of name servers on the next
        page for you to chose from (<xref
        linkend="discovery-dns-ns">).</para>

        <figure id="discovery-dns-ns" float="1">
          <title>List of name servers</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="discovery_dns_ns.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>      


        <para> You can use one of the registsred name servers, or, if
        you have your own local name server which is autoritative for
        this domain (for example local secondary server), you can
        enter its name or address in the entry field at the bottom of
        the dialog. Clicking <guibutton>"Next"</guibutton> initiates
        zone transfer (<xref linkend="discovery-dns-transfer">). </para>

        <figure id="discovery-dns-transfer" float="1">
          <title>DNS zone transfer</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="discovery_dns_transfer.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>      

        <para>If DNS zone transfer succeeded and druid was able to
        pull information it needs to create objects, you can switch to
        the next page where you chose and create objects. That page is
        the same as the one presented on <xref
        linkend="discovery-hosts-2">. </para>

      </sect2>

      <sect2>
        <title>Network Discovery</title>

        <figure id="discovery-snmp-seed" float="1">
          <title>Initial Parameters for Network Discovery</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="discovery_snmp_seed.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>      

        <para>Network discovery program (sometimes referred to as
        "Network Crawler") needs a host to start from. This host is
        called "seed host", you enter it in the first page of this
        Druid (<xref linkend="discovery-snmp-seed">). Crawler
        implements the following algorithm (this is somewhat
        simplified explanation):</para>

        <para>first, it runs several SNMP queries agains seed host
        trying to collect the following data: the list of its
        interfaces and its ARP and routing tables. This host is then
        added to the table of discovered network objects, together
        with its interfaces and their addresses and netmasks and
        host's "sysinfo" parameters. Then crawler analyses routing
        table of that host, this allows it to discover networks and
        subnets which in turn are also added to the list of discovered
        objects. Then it analyses ARP table, which holds MAC and IP
        addresses of neighboring hosts. It takes one host found in
        this table at a time and repeats the same algorithm using it
        as a seed host. When it pulls ARP table from the next host, it
        discards entries that describe objects it already knows
        about. However if it finds new entries, it tries them as well
        and thus travels further down the network. Eventually it will
        visit every host on all subnets on the network.</para>

        <para>This algorithm relies on hosts answering to SNMP
        queries. If the very first host ("seed" host) does not run
        SNMP agent, the crawler will stop on the first run of its
        algorithm and won't find anything. Therefore it is important
        to use a host which does run snmp agent as a "seed" host. Even
        if most of the hosts on the network do not run SNMP agents,
        but few do, crawler most likely will find all of them. This
        happens because it discovers objects when it reads ARP tables
        from the host which does answer, so even if discovered hosts
        do not answer to SNMP queries, crawler already found them
        anyway. </para>

        <para>One of the ways to limit the scope of the network that
        crawler will visit is to use parameter "Confine scan to the
        network". You need to enter both network address and a
        netmask; crawler checks if hosts it discovers belong to this
        network and if they do not, it discards them.</para>

        <figure id="discovery-snmp-options" float="1">
          <title>Parameters for Network Discovery: Page 1</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="discovery_snmp_options.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>      

        <figure id="discovery-snmp-options2" float="1">
          <title>Parameters for Network Discovery: Page 2</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="discovery_snmp_options2.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>      

        <para>There are few settings that affect crawler's algorithm
        (see <xref linkend="discovery-snmp-options"> and <xref
        linkend="discovery-snmp-options2">). Here is the list:</para>

        <para>
          <itemizedlist>
            <listitem>
              <para>Run network scan recursively</para>

              <para>As was described above, crawler starts with the
              "seed" host and then repeats its algorithm using every
              discovered host as a new "seed". If this option is
              turned ON, then crawler runs its algorithm only once and
              stops.</para>
            </listitem>
            <listitem>
              <para>Follow point-to-point links</para>

              <para>If firewall or a router has point-to-point
              interface (for example, PPP interface), then crawler can
              automatically calculate IP address of the other side of
              this interface. It then continues discovery process by
              querying a router on the other side. Very often
              point-to-point link connects organization's network to
              an ISP and you are not really interested in collecting
              data about your ISP network. This option, if activated,
              prevents crawler from crossing point-to-point
              links. </para>
            </listitem>
            <listitem>
              <para>Include virtual addresses</para>

              <para>Sometimes servers or routers have more than one IP
              address assigned to the same interface. If this option
              is turned on, then crawler "discovers" these virtual
              addresses and tries to create objects for them.</para>
            </listitem>
            <listitem>
              <para>Run reverse name lookup queries to determine host names</para>

              <para>If host discovered by crawler answers SNMP
              queries, then it will report is name, which crawler will
              use to create an object in Firewall Builder. However, if
              the host does not answer the query, the crawler can not
              determine its name and only knows its IP
              address. Crawler can use DNS to back-resolve such
              addresses and determine host names if this option is
              turned ON. </para>
            </listitem>

            <listitem>
              <para>SNMP query parameters</para>

              <para>You must specify SNMP "read" community string
              which will be used for SNMP queries. You can also
              specify number of retries and a timeout for the
              query.</para>
            </listitem>

            <listitem>
              <para>DNS parameters:</para>

              <para>You can specify number of retries and a timeout
              for DNS lookup query, as well as number of threads.
              Firewall Builder uses multithreaded resolver in order to
              speed up the process. In other words, it can run several
              DNS lookups simultaneously and parameter "Number of
              threads" defines how many lookups it can run in
              parallel.</para>
            </listitem>
          </itemizedlist>
        </para>


        <para>Once all parameters are entered, crawler actually gets
        to work which may take a while. Depending on the size of the
        network and such parameters as SNMP timeout value, scanning
        may take minutes or even hours. The progress of the scanner
        can be monitored on the page in the Druid (<xref
        linkend="discovery-snmp-crawler">). You can always stop
        crawler using button <guibutton>"Stop network
        scan"</guibutton>. Data does not get lost if you do that as
        Druid will use whatever objects crawler discovered before you
        stopped it.</para>

        <figure id="discovery-snmp-crawler" float="1">
          <title>Parameters for Network Discovery: Page 2</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="discovery_snmp_crawler.jpg" format="jpg" align="Left" scale="25">
            </imageobject>
          </mediaobject>
        </figure>      

        <para>Button <guibutton>"Save scan log to file"</guibutton>
        saves content of the progress window to the text file and is
        mostly used for troubleshooting and bug reports related to
        crawler. </para>

        <para>If crawler succeeded and was able to collect information
        it needs to create objects, you can switch to the next page
        where you chose and create objects. That page is the same as
        the one presented on <xref linkend="discovery-hosts-2">.</para>

      </sect2>
    </sect1>

<!-- *************************************************************** -->
    <sect1>
      <title>Working With Services</title>
      <sect2>
        <title>IP Service</title>

        <para></para>
      </sect2>

      <sect2>
        <title>ICMP Service</title>

        <para></para>
      </sect2>

      <sect2>
        <title>TCP Service</title>

        <para></para>
      </sect2>

      <sect2>
        <title>UDP Service</title>

        <para></para>
      </sect2>

      <sect2>
        <title>Custom Service</title>

        <para></para>
      </sect2>


    </sect1>
  </chapter>

  <appendix id="tab-firewall">
    <title>Using Firewall Dialog Tab 'Firewall' to configure target
    firewall options and control behavior of policy compiler </title>

    <sect1>
      <title>iptables</title>

      <para></para>
    </sect1>

    <sect1>
      <title>ipfilter</title>

      <para></para>
    </sect1>

    <sect1>
      <title>pf</title>

      <para></para>
    </sect1>

    <sect1>
      <title>Cisco PIX</title>

      <para></para>
    </sect1>
  </appendix>

  <appendix id="tab-network">
    <title>Using Firewall Dialog Tab 'Network' to adjust network setup
    on the target host OS</title>

    <sect1>
      <title>Linux</title>

      <para></para>
    </sect1>

    <sect1>
      <title>FreeBSD</title>

      <para></para>
    </sect1>

    <sect1>
      <title>OpenBSD</title>

      <para></para>
    </sect1>

    <sect1>
      <title>Solaris</title>

      <para></para>
    </sect1>

    <sect1>
      <title>Cisco PIX</title>

      <para></para>
    </sect1>

  </appendix>

  <appendix id="policy-rule-options-dialogs">
    <title>Policy Rule Options</title>

    <sect1>
      <title>iptables</title>

      <para></para>
    </sect1>

    <sect1>
      <title>ipfilter</title>

      <para></para>
    </sect1>

    <sect1>
      <title>pf</title>

      <para></para>
    </sect1>

    <sect1>
      <title>Cisco PIX</title>

      <para></para>
    </sect1>
  </appendix>
</book>
