<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook V4.1//EN" [
<!entity fwbuilder-url    "http://www.fwbuilder.org/">
<!entity tutorial-url     "http://www.fwbuilder.org/pages/Tutorial/index.html">
<!entity requirements-url "http://www.fwbuilder.org/pages/Requirements.html">
<!entity iptables-url     "http://netfilter.filewatcher.org/">
<!entity ipfilter-url     "http://coombs.anu.edu.au/~avalon/">
<!entity gtkmm-url        "http://gtkmm.sourceforge.net/">
<!entity gtkmm-download   "http://www.hvrlab.org/pub/gtkmm/">
<!entity ipt-howto        "http://www.netfilter.org/documentation/HOWTO//NAT-HOWTO.html">
<!entity faq-url          "http://www.fwbuilder.org/pages/Documents/FAQ/FAQ.html">
]>

<book id="Using">
  <?dbhtml filename="index.html">
  
  <bookinfo>

    <productname>Firewall Builder</productname>

    <title>Firewall Builder User's Guide</title>

    <author>
      <firstname>Vadim</firstname>
      <surname>Kurland</surname>
      <affiliation>
        <address><email>vadim@fwbuilder.org</email></address>
      </affiliation>
    </author>
    
  </bookinfo>

<!-- ############################################################### -->
  <chapter id="Introduction">
    <title>Introduction</title>

    <sect1>
      <title>Introducing Firewall Builder</title>

      <para>
        Whether you are an experienced professional, switching from
        Checkpoint Firewall-1 to Cisco PIX or to an Open Source
        firewall, or a hobbyist trying to secure your home network,
        Firewall Builder can help you manage your firewall policy in a
        simpler and efficient way.
      </para>

      <para>
        With Firewall Builder, you can manage security policy of your
        firewall efficiently and accurately, without the learning
        curve usually associated with command line interfaces of many
        free and commercial firewalls. You do not have to think of a
        policy in terms of obscure port numbers, firewall interfaces
        and make choices about what interface certain rule should
        belong to and so on. Instead, you create a set of objects
        describing your firewall, subnets of your network and hosts on
        them, then implement firewall policy by dragging objects into
        policy rules. You can also take an advantage of a large
        collection of predefined objects describing many standard
        protocols and services.Once policy is built in the GUI, you
        can compile it and install it on the firewall machine.
      </para>

      <para>Firewall Builder provides:</para>

      <para><itemizedlist>
          <listitem>
            <para>Over 100 predefined objects for most popular and
            widely used protocols and services</para>
          </listitem>

          <listitem>
            <para>Ability to create custom objects describing
            IP,ICMP,TCP,UDP or custom services</para>
          </listitem>

          <listitem>
            <para>Ability to create objects to describe hosts,
            networks and address ranges</para>
          </listitem>

          <listitem>
            <para>Powerful wizards and other tools to help you
            jumpstart your firewall policy, and do it right from the
            first try. Wizards implement standard policies for typical
            network layouts, which can later be extended and edited by
            hand</para>
          </listitem>

          <listitem>
            <para>Network discovery tool, to automate objects creation
            task</para>
          </listitem>
          
          <listitem>
            <para>Object oriented approach to the policy management:
            change made to an object gets immediately reflected in all
            policy rules of all firewalls using that
            object. Configuration for multiple firewalls shares the
            same object database.</para>
          </listitem>

          <listitem>
            <para>The ability to turn firewall policy into
            configuration file or a script and then install it on a
            firewall with just a few clicks of a mouse.</para>
          </listitem>

          <listitem>
            <para>Convenient GUI that supports standard Copy/Paste
            operations for both text strings and network objects and
            allows for policy editing using drag and drop</para>
          </listitem>

          <listitem>
            <para>Support for several firewall platforms, including
            Cisco PIX and Open Source firewalls iptables, ipfilter and
            pf.</para>
          </listitem>

          <listitem>
            <para>The ability to print single object or firewall
            policy or the whole hierarchy, or export it to the text
            file in either plain text or html format</para>
          </listitem>

        </itemizedlist>
      </para> 

      <figure id="example1">
        <title>Sample firewall policy</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="scrn2.jpg" format="jpg" align="Left" scale="40">
          </imageobject>
        </mediaobject>
      </figure>



    </sect1>
  </chapter>

<!-- ############################################################### -->
  <chapter id="Installation">
    <title>Installation</title>

<!-- *************************************************************** -->
    <sect1>
      <title>Packaging</title>

      <para>
       Firewall Builder is Open Source project. Source code for the
       API library, GUI and policy compilers for iptables, ipfilter
       and pf is available for download from our web site
       http://www.fwbuilder.org/. Firewall Builder for PIX is
       available only as a binary package. 
      </para>

      <para>
       We do encourage people to compile from the source code;
       building instructions are available on the same web site in the
       section "Documents". Firewall Builder can be compiled and works
       on the following OS and distributions:
      </para>

      <para><itemizedlist>
        <listitem>
          <para>RedHat Linux 7.2 and 7.3</para>
        </listitem>
        <listitem>
          <para>Mandrake Linux 8.2 </para>
        </listitem>
        <listitem>
          <para>SuSE Linux 7.3 and 8.0</para>
        </listitem>
        <listitem>
          <para>FreeBSD 4.5 and 4.6</para>
        </listitem>
        <listitem>
          <para>OpenBSD 3.0 and 3.1</para>
        </listitem>
        <listitem>
          <para>Solaris 8</para>
        </listitem>
      </itemizedlist></para>

      <para>
       Firewall Builder comes in a several packages:
      </para>

      <para><itemizedlist>
        <listitem>
          <para>Firewall Builder <emphasis>API library</emphasis>: package "libfwbuilder"</para>
        </listitem>

        <listitem>
          <para>Firewall Builder <emphasis>GUI</emphasis>: package "fwbuilder"</para>
        </listitem>

        <listitem>
          <para>Parts of GUI and policy compiler for <emphasis>iptables</emphasis>: package "fwbuilder-ipt"</para>
        </listitem>

        <listitem>
          <para>Parts of GUI and policy compiler for <emphasis>ipfilter</emphasis>: package "fwbuilder-ipf"</para>
        </listitem>

        <listitem>
          <para>Parts of GUI and policy compiler for <emphasis>pf</emphasis>: package "fwbuilder-pf"</para>
        </listitem>

        <listitem>
          <para>Parts of GUI and policy compiler for <emphasis>Cisco PIX</emphasis>: package "fwbuilder-pix"</para>
        </listitem>

      </itemizedlist></para>

      <para>
       One needs to install the API library
       <emphasis>libfwbuilder</emphasis>, the GUI
       <emphasis>fwbuilder</emphasis> and at least one module that
       provides support for the target firewall platform, this could
       be either <emphasis>fwbuilder-ipt</emphasis> or one of the
       others.
      </para>

      <para>
       Typical installation problems are addressed in the document "Firewall Builder
       Frequently Asked Questions (FAQ)" which can be found at the following
       <ulink url="&faq-url">URL</ulink>
      </para>

    </sect1>

<!-- *************************************************************** -->
    <sect1>
      <title>General prerequisites</title>

      <para>Certain libraries should be installed on your system
      before you can install our pre-built binary packages. Here is
      the list:</para>

      <para>
        <itemizedlist>
          <listitem>
            <para>libstdc++ version 2.9 or newer</para>
          </listitem>
          <listitem>
            <para>gdk-pixbuf version 0.11 or newer</para>
          </listitem>
          <listitem>
            <para>gtkmm version 1.2.8 or newer</para>
          </listitem>
          <listitem>
            <para>libsigc++ version 1.0 or newer</para>
          </listitem>
          <listitem>
            <para>libxml2 version 2.4.10 or newer</para>
          </listitem>
          <listitem>
            <para>libxslt version 1.0.7 or newer</para>
          </listitem>
          <listitem>
            <para>ucd-snmp version 4.2.3 or newer</para>
          </listitem>
          <listitem>
            <para>openssl version 0.9.6b or newer</para>
          </listitem>
        </itemizedlist>
      </para>

      <para>
       Most of these packages come standard with popular Linux
       distributions and may already be on your sysetm. In case they
       are missing, you need to install them from your original OS
       media. On the other hand, some packages are missing on some
       distributions and therefore need to be downloaded and
       installed. See below for specific instructions as of where you
       can get these packages from for different OS and distributions.
      </para>

      <para>
       You can always verify if certain package is installed on your
       system using the following command:
      </para>

      <programlisting>
       $ rpm -q gtkmm
      </programlisting>

      <para>
       This command checks if package gtkmm is installed. If the
       package is present, it prints its version, too.
      </para>

      <para>
       Once you have installed all the packages, you can start
       Firewall Builder GUI by simply typing "fwbuilder" on the
       command line.
      </para>

    </sect1>

<!-- *************************************************************** -->
    <sect1>
      <title>Installing pre-built binaries on RedHat Linux 7.2 and 7.3</title>

      <para>
       All prerequisite libraries, except gtkmm, come with RedHat 7.3,
       so chances are you already have them. If your system is
       configured as "Gnome Workstation" or Ximian Gnome is installed,
       then you already have proper gtk+, gtkmm and libsigc++
       packages. If you are using KDE, then you may need to add these
       packages.
      </para>

      <para>
       We build using gtkmm and libsigc++ packages that come with
       Ximian Gnome.  These RPM can be downloaded from their ftp site
       directly, or obtained as part of Ximian Gnome or using Red
       Carpet. libsigc++ now comes on disk #2 with RedHat 7.3. Users
       of RedHat 7.2 systems can also get it from the home page at
       http://libsigc.sourceforge.net/
      </para>

      <para>
       Firewall Builder implements number of features which make use
       of SNMP, therefore you will need ucd-snmp RPM installed,
       too. RPMs we distribute are built using ucd-snmp v4.2.3 (as of
       Feb 2002)
      </para>

      <para>
       List of recommended packages and where you can get them from:
      </para>

      <para>
        <itemizedlist>
          <listitem>
            <para>gtkmm-1.2.8-1</para>
            <para> ftp://ftp.ximian.com/pub/ximian-gnome/redhat-73-i386/</para>
          </listitem>
          <listitem>
            <para>gdk-pixbuf-0.16.0</para>
            <para> Ximian Gnome or RedHat updates</para>
          </listitem>
          <listitem>
            <para>libsigc++-1.0.4-1</para>
            <para> RedHat 7.3 distribution or ftp://ftp.ximian.com/pub/ximian-gnome/redhat-73-i386/    </para>
          </listitem>
          <listitem>
            <para>libxml2-2.4.19</para>
            <para> RedHat 7.3 distribution or ftp://ftp.gnome.org/pub/GNOME/stable/redhat/i386/libxml/ </para>
          </listitem>
          <listitem>
            <para>libxslt-1.0.15-1</para>
            <para> RedHat 7.3 distribution or ftp://ftp.gnome.org/pub/GNOME/stable/redhat/i386/libxslt/</para>
          </listitem>
          <listitem>
            <para>ucd-snmp-4.2.3</para>
            <para> RedHat distribution</para>
          </listitem>
          <listitem>
            <para>ucd-snmp-utils-4.2.3</para>
            <para> RedHat distribution</para>
          </listitem>
          <listitem>
            <para>openssl-0.9.6b</para>
            <para> RedHat distribution</para>
          </listitem>
        </itemizedlist>
      </para>

      <para>Firewall Builder for PIX has the same requirements.</para>

    </sect1>

<!-- *************************************************************** -->
    <sect1>
      <title>Installing pre-built binaries on Mandrake Linux 8.2</title>

      <para>
       Requirements for installing Firewall Builder on Mandrake are
       very much the same as for RedHat.
      </para>

      <para>
       Here is the list of recommended packages. All these packages
       come with standard Mandrake distribution, but you may need to
       add some of them if they are not installed. What packages are
       going to need to be added depends on the configuration of
       OS. Some of these packages can be found on CD #1, while some
       others are on CD #2. Use rpmdrake to install these.
      </para>

      <para>
        <itemizedlist>
          <listitem>
            <para>libglib1.2-1.2.10</para>
          </listitem>
          <listitem>
            <para>libstdc++2.10-2.96</para>
          </listitem>
          <listitem>
            <para>libgtkmm1.2-1.2.8</para>
          </listitem>
          <listitem>
            <para>libgdk-pixbuf2-0.16.0</para>
          </listitem>
          <listitem>
            <para>libsigc++1.0-4.0.4</para>
          </listitem>
          <listitem>
            <para>libxml2-2.4.16</para>
          </listitem>
          <listitem>
            <para>libxslt1-1.0.12</para>
          </listitem>
          <listitem>
            <para>libxslt-proc-1.0.12</para>
          </listitem>
          <listitem>
            <para>libsnmp0-4.2.3</para>
          </listitem>
          <listitem>
            <para>ucd-snmp-utils-4.2.3</para>
          </listitem>
          <listitem>
            <para>libopenssl0-0.9.6c</para>
          </listitem>
        </itemizedlist>
      </para>

      <para>Firewall Builder for PIX has the same requirements.</para>

    </sect1>


  </chapter>

<!-- ############################################################### -->
  <chapter id="using-gui">
    <title>Using Firewall Builder</title>

<!-- *************************************************************** -->
    <sect1>
      <title>The Main Window</title>

      <para>The main window is divided onto two parts: the objects
      tree and a dialog area. </para>

      <figure id="main-win1">
        <title>Main window</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="main_win1.jpg" format="jpg" align="Left" scale="40">
          </imageobject>
        </mediaobject>
      </figure>

      <para>The program can maintain all the objects in a single tree,
      or divide them onto "libraries". The latter case is illustrated
      by <xref linkend="main-win2"> where each library is represented
      by individual tree; one tree is always called "User" and holds
      user-defined objects. Another tree is called "Standrard" and
      holds a collection of standard objects that comes with the
      program. Some of the standard objects are visible on the
      screenshot <xref linkend="main-win2">. Standard objects
      represent over 100 of frequently used protocols and services.
      There may be more libraries in the future. Both user-defined and
      standard objects can be used equally in firewall policies or in
      groups. </para>

      <figure id="main-win2">
        <title>Standard Objects</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="main_win2.jpg" format="jpg" align="Left" scale="40">
          </imageobject>
        </mediaobject>
      </figure>

    </sect1>

<!-- *************************************************************** -->
    <sect1>
      <title>Navigating Object Tree and Editing Objects</title>

      <para>Object selected in the tree automatically appears in the
      dialog area where it can be reviewed or modified. Objects are
      opened on a single mouse click in the tree. In general, GUI has
      been designed to "look and feel" like typical file browser
      (e.g. Windows Explorer). It shows object groups as a collection
      of icons, where each icon represents individual object. User can
      navigate between objects either using mouse, or keyboard "arrow"
      keys. Active object is highlighted with a different
      color. Douple-clicking on the icon in the group view opens
      corresponding object. Clicking right mouse button or spacebar on
      the keyboard opens pop-up menu, which acts as a shortcut to a
      frequently used operations such as "Open Object", "Copy","Cut"
      and "Paste" </para>

      <para>Dialogs for objects that can be edited have buttons
      <guibutton>"Apply"</guibutton> and <guibutton>"Undo"</guibutton>
      at the bottom. Initially these buttons are inactive, but once
      object's parameters have been modified in the dialog, both
      buttons get activated so that user can click
      <guibutton>"Apply"</guibutton> to save new data, or
      <guibutton>"Undo"</guibutton> to reload original values into the
      dialog. If user tries to switch to another object without either
      saving or reloading data in the current dialog, the program
      shows pop-up dialog asking the user to take one of these
      actions. There is also an option to make the program
      automatically save modified data when user switches between
      objects, see <link linkend="gui-behavior">below</link>.
      </para>

    </sect1>
<!-- *************************************************************** -->
    <sect1>
      <title>GUI Options</title>

      <para>Certain aspects of the GUI behavior can be changed by
      user. These are gathered in the dialog called "Options" which
      can be accessed through main menu
      "<guimenuitem>Edit</guimenuitem>/<guimenuitem>Options</guimenuitem>". GUI
      Options dialog is represented on <xref linkend="options1">.
      </para>

      <figure id="options1">
        <title>GUI Options Dialog</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="options1.jpg" format="jpg" align="Left" scale="40">
          </imageobject>
        </mediaobject>
      </figure>


      <para>
        <itemizedlist>
          <listitem>
            <para><guimenuitem>General/Paths</guimenuitem></para>

            <itemizedlist>
              <listitem>
                <para>Working directory:</para>

                <para>This option tells the program where data file
                should be stored. Policy compilers also store firewall
                configuration files or scripts they produce in the
                same directory. If this parameter is left blank, then
                policy compiler will store firewall configuration it
                generates in the same directory the original data file
                was loaded from.</para>
              </listitem>
            </itemizedlist>
          </listitem>

          <listitem>
            <para><guimenuitem>Network</guimenuitem></para>

            <itemizedlist>
              <listitem>
                <para>SNMP Timeout and Retries</para>

                <para>Here you can configure timeout values and retry
                counters for SNMP queries. These values are used when
                program runs SNMP query to collect host "sysinfo" data
                or its interfaces Note that Network discovery Druid
                has its own settings for SNMP timeout value and retry
                counter..</para>
              </listitem>
              <listitem>
                <para>DNS Timeout and Retries</para>

                <para>Here you can configure timeout values and retry
                counters for DNS queries. These values are used when
                the program uses DNS to determine host's address by
                its name. </para>
              </listitem>
            </itemizedlist>
          </listitem>

          <listitem>
            <para><guimenuitem>GUI</guimenuitem></para>

            <itemizedlist>
              <listitem>
                <para>Remember window size at exit</para>

                <para>If this option is checked, the GUI remembers
                main window size when program finishes. The
                information is stored in user's preferences file so
                that when the program is started again next time, it
                opens window of the same size as before.</para>
              </listitem>

              <listitem>
                <para>Hide navigation bar in object dialog</para>

                <para>The GUI can show navigation bar on top for the
                object's dialog. The navigation bar shows current
                position in the tree and familiar buttons that allow
                navigation "up", "down", "left" in the tree. If this
                option is checked, then the bar will disappear.</para>
              </listitem>
            </itemizedlist>
          </listitem>

          <listitem>
            <para><guimenuitem>GUI / Object Tooltips</guimenuitem></para>

            <para>Firewall Builder can show object's properties in a
            quick pop-up window (this feature is often called
            "tooltip") when user flies mouse cursor over the object in
            a group view or in the firewall policy view, where objects
            are represented by their icons. This is a convenient way
            to quickly check object's properties without having to
            leave current dialog and open the object's dialog. There
            are three choices for the tooltip feature:
           </para>

            <para>
              <itemizedlist>
                <listitem><para>Off</para></listitem>
                <listitem><para>Show properties in a tooltip pop-up window</para></listitem>
                <listitem><para>Show properties on a main window's status bar</para></listitem>
              </itemizedlist>
            </para>
        
            <para>For the second choice (showing in tooltip window)
            additional parameter is avaliable, it controls a delay
            before tooltip window appears after mouse cursor is
            positioned over the object's icon.</para>
          </listitem>

          <listitem>
            <para><guimenuitem>GUI / Behavior</guimenuitem></para>
            <anchor id="gui-behavior">

            <itemizedlist>
              <listitem>
                <para>Automatically save data in dialogs while
                switching between objects</para>

                <para>The GUI shows dialog for every opened object in
                the same place (right half of the main
                window). Normally if user has made some changes to the
                object's data and wants to switch to another object
                without clicking on <guibutton>"Apply"</guibutton> or
                <guibutton>"Undo"</guibutton> button, GUI shows pop-up
                dialog asking whether data should be saved or changes
                should be ignored. If this option is turned on though,
                the program automatically saves data every time user
                leaves dialog with unsaved data to open another
                object.</para>

              </listitem>
            </itemizedlist>

          </listitem>

          <listitem>
            <para><guimenuitem>GUI / Tree View</guimenuitem></para>

            <para>As was mentioned before, objects can be organized
            into different libraries. Usually there are at least two
            libraries: "User" and "Standard". GUI can represent
            objects either in one large tree, or in a separate tree
            for each library.</para>

            <itemizedlist>
              <listitem>
                <para>Show object libraries in separate trees</para>

                <para>If this option is checked, the GUI shows objects
                belonging to different libraries in a separate
                trees</para>
              </listitem>

              <listitem>
                <para>Combine all libraries in a single tree</para>

                <para>If this option is checked, the GUI combines all
                objects in one large tree.</para>
              </listitem>

              <listitem>
                <para>Show properties of objects in the tree</para>

                <para>If this option is checked, then GUI shows
                brief summary of object's properties, or one most
                frequently used property, in the additional column in
                the tree view.</para>
              </listitem>
            </itemizedlist>

          </listitem>
        </itemizedlist>
      </para>
    </sect1>

<!-- *************************************************************** -->
    <sect1>
      <title>Working With Objects</title>

      <para>All objects visible to user have some common editable
      fields, such as their name and comment. Object name can contain
      white spaces and can be arbitrary long. Comment can contain any
      text you wish, of any length.
      </para>

      <para>Dialogs for those objects that can have address use
      standard GUI widget that visually separates four octets of IP
      address and provides "on the fly" control for the validity of an
      address.</para>

      <sect2>
        <title>Host Object</title>

        <para>Host object in Firewall Builder is designed to represent
        real hosts on the network: workstations, servers and any other
        network node with an address. Just like real hosts, host
        object can have interfaces, which in turn have addresses. Both
        interfaces and addresses are represented by objects, which are
        organized into a tree-like an hierarchy. This way, interface
        object is sitting in the tree directly under host and address
        objects are located under interfaces. Just like in real
        devices, in Firewall Builder interface can have either one or
        multiple addresses. An example of a host with one interface,
        which has multiple addresses is shown on <xref
        linkend="host-in-tree">. In fact host may even have intergace
        with no addresses at all. We will go over features of
        interface and address objects below.
        </para>

        <figure id="host-in-tree">
          <title>Host Object With One Interface And Multiple Virtual Addresses </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="host_in_tree.jpg" format="jpg" align="Left" scale="40">
            </imageobject>
          </mediaobject>
        </figure>


        <note>
          <para>host object can not have any security or Network
          Address Translation policy associated with it; only firewall
          objects can have it.</para>
        </note>

        <para>Host object dialog is split onto two tabs: "General"
        (<xref linkend="host-dialog1">) and "Sysinfo" (<xref
        linkend="host-dialog2">). </para>

        <figure id="host-dialog1">
          <title>Editing Host Object</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="host_dialog1.jpg" format="jpg" align="Left" scale="40">
            </imageobject>
          </mediaobject>
        </figure>

        <para>Tab "General" holds GUI controls for the host name, SNMP
        communities, comment text and an option that activates MAC
        address filtering for this host. If this option is activated,
        policy compiler uses MAC addresses of all interfaces of this
        host to build firewall rules.  Not all underlying firewall
        platforms support MAC address filtering, so this option may
        have no effect on the generated firewall script. However this
        is treated as non-critical situation and policy compiler will
        only generate warning while processing firewall policy where
        such host is used.</para>

        <para>SNMP communities usually can not contain spaces. If your
        host does not run SNMP agent, or you do not need to pull host
        info using SNMP, then SNMP community strings may be left
        blank.</para>

        <figure id="host-dialog2">
          <title>Host Object System Information</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="host_dialog2.jpg" format="jpg" align="Left" scale="40">
            </imageobject>
          </mediaobject>
        </figure>

        <para>Tab "Sysinfo" holds data retrieved from the host via
        SNMP query. There you can see strings that host returned for
        standard SNMP MIB variables "Description", "Location" and
        "Contact". These fields are read-only in the GUI.</para>

      </sect2>

      <sect2>
        <title>Interface Object</title>

        <para></para>
      </sect2>

      <sect2>
        <title>Address Object</title>

        <para></para>
      </sect2>

      <sect2>
        <title>Network Object</title>

        <para></para>
      </sect2>

      <sect2>
        <title>Address Range Object</title>

        <para></para>
      </sect2>

      <sect2>
        <title>Group of Objects</title>

        <para></para>
      </sect2>

      <sect2>
        <title>Firewall Object</title>

        <para></para>
      </sect2>

      <sect2>
        <title>Network Discovery: Quick Way to Create Objects</title>

        <para></para>
      </sect2>
    </sect1>

<!-- *************************************************************** -->
    <sect1>
      <title>Working With Services</title>
      <sect2>
        <title>IP Service</title>

        <para></para>
      </sect2>

      <sect2>
        <title>ICMP Service</title>

        <para></para>
      </sect2>

      <sect2>
        <title>TCP Service</title>

        <para></para>
      </sect2>

      <sect2>
        <title>UDP Service</title>

        <para></para>
      </sect2>

      <sect2>
        <title>Custom Service</title>

        <para></para>
      </sect2>


    </sect1>
  </chapter>

</book>
