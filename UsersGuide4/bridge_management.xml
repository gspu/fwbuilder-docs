<?xml version="1.0"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
                 "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">


<sect1 id="bridge_management">
  <title>Bridge ports</title>

  <!-- TODO need examples -->

  <para>
    Support for bridge interfaces and bridge ports is only
    available for Linux firewalls. Generated script can manage
    bridge interfaces as follows:

    <itemizedlist>
      <listitem>
        <para>
          Generated script includes shell code to manage bridge
          interfaces if checkbox "Configure bridge interfaces" is
          turned on in the "Script" tab of the firewall object
          "advanced" settings dialog. By default, it is turned off.
        </para>
      </listitem>

      <listitem>
        <para>Script uses <emphasis>brctl</emphasis> tool which
          should be present on the friewall. The script checks if
          it is available and aborts if it can not find it.
        </para>
      </listitem>

      <listitem>
        <para>
          Script checks if bridge interface configured in the GUI
          exists on the firewall and creates it if necessary.
        </para>
      </listitem>

      <listitem>
        <para>
          It then checks if bridge interface on the firewall is
          configured with bridge ports that were defined in the
          GUI. It adds those that are missing and removes those
          that are not configured in the GUI.
        </para>
      </listitem>

      <listitem>
        <para>
          Adding VLAN interfaces as bridge ports, as well as mix
          of regular ethernet and vlan inetrfaces is
          supported. That is, the following configuration can be
          configured in fwbuilder and generated script will create
          it:

          <programlisting>
bridge name bridge id    STP enabled    interfaces
br0  8000.000c29f6bebe   no             eth4.102
                                        eth5
          </programlisting>
        </para>
      </listitem>

      <listitem>
        <para>
          In order to use VLAN interface as bridge port, it needs
          to be created twice in the GUI. First time it is created
          as a child of the regular ethernet interface and has
          type "VLAN". The second interface object with the same
          name should be created as a child of a bridge interface
          with a type "ethernet".
          <!-- TODO need example here -->

        </para>
      </listitem>

      <listitem>
        <para>
        </para>
      </listitem>


    </itemizedlist>
  </para>

  <sect2 id="bridge_management_linux">
    <title>Bridge interface management on Linux</title>

    <para>
      Script generated by fwbuilder for the linux firewall can create
      and remove bridge interface such as "br0" and also add and
      remove regular ethernet interfaces as bridge ports. This
      function is controlled by the checkbox "Configure VLAN
      interfaces" in the "Script" tab of the firewall object
      "advanced" settings dialog. By default, it is turned off.
    </para>

    <para>
      As with IP addresses and vlans, the script manages bridge
      incrementally. It compares actual configuration of the firewall
      with objects defined in fwbuilder GUI and then adds or removes
      bridge interfaces and bridge ports. Running the same script
      multiple times does not make any unnecessary changes on the
      firewall. If actual configuration matches objects created in
      fwbuilder GUI, script does nut perform any actions and just
      exits.
    </para>

    <para>
      The script uses utility <emphasis>brctl</emphasis> to configure
      the bridge. It checks if the utility is present on the
      firewall machine and aborts execution if it is not found. If
      this utility is installed in an unusual place on your machine,
      you can configure the path to it in the "Host OS" settings
      dialog of the firewall object.
    </para>

    <para>
      To illustrate bridge management on Linux, consider firewall
      object "linux-test-bridge-1" shown on
      <xref linkend="bridge_managemen_1"/>:
    </para>

    <para>
      <figure id="bridge_managemen_1">
        <title>Example configuration; inetrfaces eth1 and eth2 will become bridge ports</title>
        <graphic scale="70" fileref="bridge-management-1.png"/>
      </figure>
    </para>

    <para>
      To build the bridge, I need to create bridge
      interface <emphasis>"br0"</emphasis>. This interface is just
      regular child object of the firewall object in the tree, to
      create it, select the firewall and click right mouse button to
      open context menu, then choose item "New Interface". The new
      interface is created with generic name "Interface", rename it to
      <emphasis>"br0"</emphasis>. At this point we have interfaces
      br0, eth1 and eth2 but the latter two are not configured as
      bridge ports yet. Interface br0 is not bridge yet either.
    </para>

    <para>
      <figure id="bridge_managemen_2">
        <title>Bridge interface br0</title>
        <graphic scale="70" fileref="bridge-management-2.png"/>
      </figure>
    </para>

    <para>
      To make br0 a bridge, open it in the editor by double clicking
      it int the tree and then click "Advanced Interface Settings"
      button.  This opens a dialog where you can change interface type
      and configure some parameters. Set type to "bridge" and turn STP
      on if you need it.
    </para>

    <para>
      <figure id="bridge_managemen_3">
        <title>Configuring bridge interface type</title>
        <graphic scale="70" fileref="bridge-management-3.png"/>
      </figure>
    </para>

    <para>
      To make eth1 and eth2 bridge ports, use Cut and Paste operations
      on the objects in the tree. Paste both interface objects into
      the br0 interface so that they move to the position right under
      it in the tree as shown in <xref linkend="bridge_managemen_4"/>.
      Notice how the program automatically recognized them as bridge
      ports and showed this in the second column of the tree.
    </para>

    <para>
      <figure id="bridge_managemen_4">
        <title>Configuring bridge ports</title>
        <graphic scale="70" fileref="bridge-management-4.png"/>
      </figure>
    </para>

    <note>
      <para>
        I have started with a firewall object that already had interface
        objects for eth1 and eth2, but this is not necessary. You can
        add bridge ports by creating new inetrface objects under the
        bridge interface using context menu that you get when you click
        right mouse button on it, menu item "New Interface".
      </para>
    </note>

    <para>
      Notice that bridge ports can not have IP addresses of their own
      and corresponding items in the context menu are disabled:
    </para>

    <para>
      <figure id="bridge_managemen_5">
        <title>Some functions are disabled for bridge port subinterfaces</title>
        <graphic scale="70" fileref="bridge-management-5.png"/>
      </figure>
    </para>

    <para>
      To complete interface configuration we need to add IP address to
      inetrface br0 if it needs one. I am going to add address
      10.1.1.1/24 to test with. Then I can compile and run the script
      on the firewall.
    </para>

    <para>
      The firewall machine where I am going to run generated script
      has interfaces eth0, eth1 and eth2 but does not have inetrface
      br0 yet. Interfaces eth1 and eth2 are not configured as bridge
      ports. Lets see how the script generated by fwbuilder
      reconfigures this machine:
    </para>

    <programlisting>
root@linux-test-1:~# /etc/fw/linux-test-bridge-1.fw  interfaces
Activating firewall script generated Fri Feb 26 16:53:05 2010 by vadim
Running prolog script
# Creating bridge interface 
# Updating bridge configuration: addif br0 eth1
# Updating bridge configuration: addif br0 eth2
# Adding ip address: br0 10.1.1.1/24
Verifying interfaces: lo eth0 br0 eth1 eth2
    </programlisting>

    <para>
      Using ip and brctl tools to verify configuration:
    </para>

    <programlisting>
root@linux-test-1:~# ip addr show
1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 16436 qdisc noqueue state UNKNOWN 
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 1000
    link/ether 00:0c:29:1e:dc:aa brd ff:ff:ff:ff:ff:ff
    inet 10.3.14.108/24 brd 10.3.14.255 scope global eth0
    inet6 fe80::20c:29ff:fe1e:dcaa/64 scope link 
       valid_lft forever preferred_lft forever
3: eth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 1000
    link/ether 00:0c:29:1e:dc:b4 brd ff:ff:ff:ff:ff:ff
    inet6 fe80::20c:29ff:fe1e:dcb4/64 scope link 
       valid_lft forever preferred_lft forever
4: eth2: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 1000
    link/ether 00:0c:29:1e:dc:be brd ff:ff:ff:ff:ff:ff
    inet6 fe80::20c:29ff:fe1e:dcbe/64 scope link 
       valid_lft forever preferred_lft forever
5: br0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UNKNOWN 
    link/ether 00:0c:29:1e:dc:b4 brd ff:ff:ff:ff:ff:ff
    inet 10.1.1.1/24 scope global br0
    inet6 fe80::18cb:52ff:fe4b:c6b1/64 scope link 
       valid_lft forever preferred_lft forever
    </programlisting>

    <programlisting>
root@linux-test-1:~# brctl show
bridge name     bridge id               STP enabled     interfaces
br0             8000.000c291edcb4       no              eth1
                                                        eth2
    </programlisting>

    <para>
      Now I am going to add another bridge port eth3 to br0, recompile
      the script and run it on the firewall. First, add eth3 bridge port
      in the GUI:
    </para>

    <para>
      <figure id="bridge_managemen_6">
        <title>Adding third bridge port</title>
        <graphic scale="70" fileref="bridge-management-6.png"/>
      </figure>
    </para>

    <programlisting>
root@linux-test-1:~# /etc/fw/linux-test-bridge-1.fw interfaces
# Updating bridge configuration: addif br0 eth3
    </programlisting>

    <para>
      All the script did is add eth3 to br0 bridge. New bridge
      configuration looks like this:
    </para>

    <programlisting>
root@linux-test-1:~# brctl show
bridge name     bridge id               STP enabled     interfaces
br0             8000.000c291edcb4       no              eth1
                                                        eth2
                                                        eth3
    </programlisting>

    <tip>
      <para>
        The change that added eth3 to the bridge caused bridge loop
        and consequently nasty ARP storm inside my VMWare ESXi server
        where virtual machine I used to test bridge configuration was
        running. I had three virtual switches but I forgot that eth2
        and eth3 were attached to the same virtual switch. Needless to
        say, this ARP storm promptly killed ESXi. Now I am using
        traffic shaping feature in ESXi to throttle traffic on the
        backend virtual switches that I am using only for
        testing. Beware of bridge loops when you work with bridging
        firewalls.
      </para>
    </tip>

    <para>
      Now lets remove bridge port in the GUI and see what happens. I
      am going to delete object eth3 in the GUI, recompile and run the
      script on the firewall again:
    </para>

    <programlisting>
root@linux-test-1:~# /etc/fw/linux-test-bridge-1.fw interfaces
# Updating bridge configuration: delif br0 eth3
    </programlisting>

    <programlisting>
root@linux-test-1:~# brctl show
bridge name     bridge id               STP enabled     interfaces
br0             8000.000c291edcb4       no              eth1
                                                        eth2
    </programlisting>

    <para>
      As expected, the script returned bridge configuration to the
      state it was in before I added eth3
    </para>

  </sect2>


  <sect2 id="bridge_vlan_management_bsd">
    <title>Bridge with VLAN interfaces as bridge ports</title>

    <para>
      Firewall Builder can generate configuration for the bridging
      firewall using VLAN inetrfaces as bridge ports, however there is
      some twist to this. Recall from
      <xref linkend="vlan_management"/> that VLANs are created in
      fwbuilder as subinterfaces under their respective parent
      interface. That is, VLAN
      interface <emphasis>"eth1.100"</emphasis> is an Interface object
      that sits in the tree right under
      interface <emphasis>"eth1"</emphasis>:
    </para>

    <para>
      <figure id="bridge_with_vlans_1">
        <title>VLAN subinterface eth1.100</title>
        <graphic scale="70" fileref="bridge_and_vlans_1.png"/>
      </figure>
    </para>

    <para>
      As we have seen in <xref linkend="bridge_management_linux"/> and
      <xref linkend="bridge_vlan_management_bsd"/>, bridge ports are
      also represented by interface objects located in the tree under
      corresponding bridge interface, as shown in
      <xref linkend="bridge_with_vlans_2"/>:
    </para>

    <para>
      <figure id="bridge_with_vlans_2">
        <title>Bridge ports are child objects of the bridge interface</title>
        <graphic scale="70" fileref="bridge-management-4.png"/>
      </figure>
    </para>

    <para>
      If we want <emphasis>eth1.100</emphasis> to work as a bridge
      port, it must be created twice, once as a child of
      interface <emphasis>eth1</emphasis> and second time as a child
      of interface <emphasis>br0</emphasis>. The first copy represents
      it as VLAN subinterface while the second one represents bridge
      port.
    </para>

    <para>
      <figure id="bridge_with_vlans_3">
        <title>eth1.100 and eth1.101 are VLAN interfaces that act as bridge ports as well</title>
        <graphic scale="70" fileref="bridge_and_vlans_3.png"/>
      </figure>
    </para>

  </sect2>


</sect1>


