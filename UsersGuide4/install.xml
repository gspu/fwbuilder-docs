<?xml version="1.0"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
                 "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

  <chapter id="install">
    <title>Installing Firewall Builder</title>
    <sect1 id="installation">
      <title>RPM-based distributions (Red Hat, Fedora, OpenSUSE and others)</title>
      <para>Using pre-built binary RPMs</para>

      <para>You need to download and install two RPMs:</para>

      <itemizedlist>
	<listitem><para>Example: <filename>libfwbuilder-4.0.0-1.i386.rpm</filename>
	</para></listitem>
	<listitem><para>Example: <filename>fwbuilder-4.0.0-1.i386.rpm</filename>
	</para></listitem>
      </itemizedlist>

      <para>To satisfy dependencies, you need the following packages installed on your system:</para>

      <itemizedlist>
	<listitem><para>libxml2 v2.4.10 or newer
	</para></listitem>
	<listitem><para>libxslt v1.0.7 o newer
	</para></listitem>
	<listitem><para>ucd-snmp or net-snmp
	</para></listitem>
	<listitem><para>QT 4.3.x, 4.4.x, 4.5.x, 4.6.x. Fwbuilder uses
	    features available in QT 4.3 or later, it will not work
	    with 4.2
	</para></listitem>
      </itemizedlist>
	<para>Pre-built binary RPMs for RedHat Enterprise Linux 5 (RHEL 5) and CentOS 5.x</para>

	<para>These distributions do not come with QT4 and third-party
	binary RPMs of QT v4.3.x and 4.4.x are hard to come by. We
	distribute binary RPMs of Firewall Builder 4.0 statically
	linked with QT 4.4.1 for these distributions. These RPMs are
	posted in the downloads area on the SourceForge project
	site. These RPMs have the same standard
	names: <filename>libfwbuilder-4.0.0-1.i386.el5.rpm</filename>
	and <filename>fwbuilder-4.0.0-1.i386.el5.rpm</filename>, they
	just have no dependency on QT RPMs.</para>

	<para>If fwbuilder statically linked with QT crashes on start
	on your CentOS system, check if you have the following font
	packages installed: bitmap-fonts or
	bitstream-vera-fonts. Either one should make fwbuilder work
	(but we are told bitstream-vera fonts look better). See bug
	report <ulink url="http://sourceforge.net/tracker/?func=detail%26aid=2595205%26group_id=5314%26atid=1070394"><citetitle>#2595205</citetitle></ulink>
	on SourceForge for more details.</para>

      <para>To install Firewall Builder, go to your download directory
      and run the following command (replace the filenames with the
      names of the files you actually downloaded:</para>

      <programlisting>rpm -i libfwbuilder-4.0.0-1.i386.rpm fwbuilder-4.0.0-1.i386.rpm</programlisting>
    </sect1>

    <sect1 id="ubuntu">
      <title>Ubuntu Installation</title>
      <para>Using pre-built binary packages</para>
      
      <para>You need to download and install two packages: 

      <itemizedlist>
	<listitem><para>Example: <filename>libfwbuilder_4.0.4-b2513-ubuntu-karmic-1_i386.deb</filename>
	</para></listitem>
	<listitem><para>Example: <filename>fwbuilder_4.0.4-b2513-ubuntu-karmic-1_i386.deb</filename>
	</para></listitem>
      </itemizedlist></para>

      <para>To satisfy dependencies, you need the following packages installed on your system:</para>

      <itemizedlist>
	<listitem>
          <para>QT 4.3.x, 4.4.x, 4.5.x, 4.6.x. Fwbuilder uses features
	    available in QT 4.3 or later, it will not work with 4.2
	  </para>
        </listitem>
      </itemizedlist>

      <para>You can get QT via your favorite package manager.</para>

      <para>To install Firewall Builder, go to your download directory
      and run the following command (replace the filenames with the
      names of the files you actually downloaded:</para>

      <programlisting>dpkg -i libfwbuilder_4.0.4-b2513-ubuntu-karmic-1_i386.deb \
	  fwbuilder_4.0.4-b2513-ubuntu-karmic-1_i386.deb</programlisting>

    </sect1>


    <sect1 id="freebsd">
      <title>Installing FreeBSD and OpenBSD Ports</title>

      <para>Firewall Builder consists of two
      ports: <filename>/usr/ports/security/libfwbuilder</filename>
      and <filename>/usr/ports/security/fwbuilder</filename>. Once
      both ports are updated (it usually takes couple of weeks to
      update ports after the package is released), just install the
      port as usual using portinstall or issuing "make install"
      in <filename>/usr/ports/security/fwbuilder</filename>.</para>
    </sect1>


    <sect1 id="windows_install">
      <title>Windows Installation</title>

      <para>Double-click on the package file, then follow the
      step-by-step instructions in the installation wizard.</para>
    </sect1>


    <sect1 id="macosx_install">
      <title>Mac OS X Installation</title>

      <para>Mac OS X package is distributed in the form of a disk
      image ( .dmg file). Doubleclick on the image to mount it, then
      drag Firewall Builder application to your Applications folder
      (or any other place).</para>
    </sect1>


    <sect1 id="compile_from_source">
      <title>Compiling from Source</title>

      <para>Firewall Builder can be compiled and works on the
      following OS and distributions: Debian Linux (including Ubuntu), Mandrake Linux, RedHat Linux,
        SuSE Linux, Gentoo Linux, FreeBSD, OpenBSD, Mac OS X, Solaris.
      </para>

      <para>To compile from source, first download dependencies for your platform:</para>

      <para>For RedHat-based systems:</para>

      <itemizedlist spacing="compact">
        <listitem>
          <para>automake</para>
        </listitem>

        <listitem>
          <para>autoconf</para>
        </listitem>

        <listitem>
          <para>libtool</para>
        </listitem>

        <listitem>
          <para>libxml2-devel</para>
        </listitem>

        <listitem>
          <para>libxslt-devel</para>
        </listitem>

        <listitem>
          <para>net-snmp-devel</para>
        </listitem>

        <listitem>
          <para>qt</para>
        </listitem>

        <listitem>
          <para>qt-devel</para>
        </listitem>

        <listitem>
          <para>qt-x11</para>
        </listitem>
      </itemizedlist>

      <para>You may need to install packages elfutils-libelf and
      elfutils-libelf-devel (libelf on SuSE), otherwise libfwbuilder
      won't pick up net-snmp library even if it is installed.</para>

      <para>For Debian-based systems:</para>

      <itemizedlist spacing="compact">
        <listitem>
          <para>automake</para>
        </listitem>

        <listitem>
          <para>autoconf</para>
        </listitem>

        <listitem>
          <para>libtool</para>
        </listitem>

        <listitem>
          <para>libxml2-dev</para>
        </listitem>

        <listitem>
          <para>libxslt-dev</para>
        </listitem>

        <listitem>
          <para>libsnmp-dev</para>
        </listitem>

        <listitem>
          <para>libqt4-core</para>
        </listitem>

        <listitem>
          <para>libqt4-dev</para>
        </listitem>

        <listitem>
          <para>libqt4-gui</para>
        </listitem>

        <listitem>
          <para>qt4-dev-tools</para>
        </listitem>
      </itemizedlist>

      <para>Next, download source archives from SourceForge
      (libfwbuilder-4.0.0.tar.gz and fwbuilder-4.0.0.tar.gz, for
      example) and unpack them somewhere. Then build as
      follows:
      </para>

<programlisting>
cd libfwbuilder-&lt;version_number&gt;
./autogen.sh
make
make install

cd /fwbuilder-&lt;version_number&gt;
./autogen.sh
make
make install
</programlisting> 

    <note><title>Compilation may require other packages for RedHat and SuSE</title>

    <para>If you get errors that refer to missing autoconf macros
      while running autogen.sh for fwbuilder, check if your system has
      RPM gettext-devel. You may need to add other "development" RPMs
      besides these, but these two are often forgotten.</para>
    </note>

    <para>The configure scripts for both libfwbuilder and fwbuilder
      tries to find your QT4 installation in several more-or-less
      standard places. However, if you installed QT in a directory
      where the script can't find it, you can provide the path to it
      using the <parameter>--with-qtdir</parameter> option to script
      autogen.sh. This looks as follows:
    </para>

    <programlisting>
cd libfwbuilder-&lt;version_number&gt;
./autogen.sh --with-qtdir=/opt/qt4
make
make install
      
cd /fwbuilder-&lt;version_number&gt;
./autogen.sh --with-qtdir=/opt/qt4
make
make install
    </programlisting>           

    <para>
      By default script configure assumes prefix="/usr/local" and
      installs libfwbuilder libraries in /usr/local/lib and binaries
      in /usr/local/bin. Make sure /usr/local/lib is added to your
      LD_LIBRARY_PATH environment variable or to the /etc/ld.so.conf
      configuration file, otherwise the program won't find dynamic
      libraries there. Likewise, /usr/local/bin needs to be in your
      PATH.
    </para>

    <para>
      You can install libraries and binaries in a different place by
      specifying new prefix as follows:
    </para>

    <programlisting>
./autogen.sh --prefix="/opt"
    </programlisting>

    <para>
      This will install libraries
      in <filename class='directory'>/opt/lib</filename> and the
      program in <filename class='directory'>/opt/bin</filename>.
    </para> 

    </sect1>

    <sect1 id="repositories">
      <title>Rpm and deb repositories for stable and testing packages</title>

      <para>
        In addition to the packages that ship with Linux
        distributions, we maintain repositories of rpm and deb
        packages of Firewall Builder, including both stable releases
        and testing builds.
      </para>



      <sect2>
        <title>Debian/Ubuntu packages repository</title>

        <para></para>

        <para>
          To access <emphasis>Debian/Ubuntu repository</emphasis>
          of <emphasis>stable</emphasis> packges, add
          the following line to the file
          <emphasis>/etc/apt/sources.list</emphasis> (replace
          "maverick" here with "lucid" or another name depending on
          your version):
        </para>

        <programlisting>
deb http://www.fwbuilder.org/deb/stable/ maverick contrib
        </programlisting>

        <para>
          To access <emphasis>Debian/Ubuntu repository</emphasis>
          of <emphasis>testing</emphasis> packges, add
          the following line to the file
          <emphasis>/etc/apt/sources.list</emphasis> (replace
          "maverick" here with "lucid" or another name depending on
          your version):
        </para>

        <programlisting>
deb http://www.fwbuilder.org/deb/testing/ maverick contrib
        </programlisting>

        <para>
          If you wish to follow only stable releases, add
          only the line with "/deb/stable" url.
        </para>

        <para>
          Packages in all repositories are signed with GPG key
          with ID EAEE08FE "Firewall Builder Project (Package
          Signing Key) &lt;pkgadmin@fwbuilder.org&gt;".
          Download <ulink url="http://www.fwbuilder.org/PACKAGE-GPG-KEY-fwbuilder.asc">public
            key</ulink> and add it to your key chain to be able to
          verify integrity of the packages in repositories. To
          add the key on Debian/Ubuntu, use the following commands:
        </para>

        <programlisting>
wget http://www.fwbuilder.org/PACKAGE-GPG-KEY-fwbuilder.asc
apt-key add PACKAGE-GPG-KEY-fwbuilder.asc
        </programlisting>

        <sect3>
          <title>Configuring debsig-verify to verify package signatures</title>

          <para>
            This part is optional, although it is highly
            recommended in order to ensure authenticity of the
            installed fwbuilder packages. However, if you do not
            configure debsig-verify, package signatures will not
            be verified but apt tools will try to install them
            anyway.
          </para>


          <para>
            Unfortunately it is not enough to just add the key
            to apt-get, you also need to install
            package <emphasis>debsig-verify</emphasis> and configure it.
            Consult one of the HOWTO guides on the Internet that
            describe how to set up debsig-verify tools to verify
            signed packages; one such guide can be found here:
            <ulink url="http://purplefloyd.wordpress.com/2009/02/05/signing-deb-packages/">
              Signing .deb packages</ulink> . See section #4 "Setup
            the machine(s) that will be downloading and
            verifying the package" in it.
          </para>

          <para>
            Here is a brief write-up of the debsig-verify
            installation and configuration process.
          </para>

          <para>
            First, you need to install <emphasis>debsig-verify</emphasis> and <emphasis>gpg</emphasis>:
            <programlisting>
aptitude install debsig-verify gpg
            </programlisting>
          </para>

          <para>
            Import our key and check its fingerprint:
          </para>

          <programlisting>
gpg --import PACKAGE-GPG-KEY-fwbuilder.asc
gpg --fingerprint
          </programlisting>

          <para>
            <emphasis>gpg --fingerprint</emphasis> prints something like this:
          </para>

          <programlisting>
------------------------
pub   1024D/EAEE08FE 2009-05-17
Key fingerprint = 5397 6AA1 5E71 2F74 947B  4496 EF2E DD98 EAEE 08FE
uid                  Firewall Builder Project (Package Signing Key) &lt;pkgadmin@fwbuilder.org&gt;
sub   2048g/FE31D386 2009-05-17
          </programlisting>

          <para>
            Key ID is <emphasis>EAEE08FE</emphasis>, its fingerprint
            is last 4 groups if hex digits in the "Key fingerprint"
            line: <emphasis>EF2EDD98EAEE08FE</emphasis> (remove white
            spaces).
          </para>

          <para>
            Next step is to import the key into debsig keyring:
          </para>

          <programlisting>
mkdir /usr/share/debsig/keyrings/EF2EDD98EAEE08FE
gpg --no-default-keyring \
    --keyring /usr/share/debsig/keyrings/EF2EDD98EAEE08FE/debsig.gpg \
    --import PACKAGE-GPG-KEY-fwbuilder.asc 
          </programlisting>

          <para>
            Now we need to create debsig-verify policy file:
          </para>

          <programlisting>
mkdir /etc/debsig/policies/EF2EDD98EAEE08FE/
vi /etc/debsig/policies/EF2EDD98EAEE08FE/fwbuilder-testing.pol
          </programlisting>

          <para>
            The policy file is in XML and looks like this:
          </para>

          <programlisting>
&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE Policy SYSTEM "http://www.debian.org/debsig/1.0/policy.dtd"&gt;
&lt;Policy xmlns="http://www.debian.org/debsig/1.0/"&gt;

&lt;Origin Name="Firewall Builder" id="EF2EDD98EAEE08FE"
Description="Firewall Builder Package"/&gt;

&lt;Selection&gt;
&lt;Required Type="origin" File="debsig.gpg" id="EF2EDD98EAEE08FE"/&gt;
&lt;/Selection&gt;

&lt;Verification MinOptional="0"&gt;
&lt;Required Type="origin" File="debsig.gpg" id="EF2EDD98EAEE08FE"/&gt;
&lt;/Verification&gt;

&lt;/Policy&gt;
          </programlisting>

          <para>
            Note how key fingerprint is used as an id in all XML
            elements.
          </para>

          <para>
            apt-get, aptitude and other apt tools save
            downloaded packages in the
            directory <emphasis>/var/cache/apt/archives/</emphasis>. You can
            use debsig-verify to verify saved copy:
          </para>


          <programlisting>
# debsig-verify /var/cache/apt/archives/libfwbuilder_4.1.3-b3421-ubuntu-maverick-1_amd64.deb 
debsig: Verified package from `package from Firewall Builder' (Firewall Builder)
          </programlisting>

          <para>
            Now apt-get and other apt tools will call
            debsig-verify to verify packages they are about to
            install or upgrade.
          </para>

        </sect3>

        <sect3>
          <title>Troubleshooting .deb repository access</title>

          <para>
            After this, you should be able to install and update
            fwbuilder packages using synaptic or aptitude.
          </para>

          <para>
            Note that apt caches package information, so when we
            release new packages, they will not match cached
            data when you try to install them. Run <emphasis>apt-get
              update</emphasis> before you install or upgrade
            packages to refresh cached data. If you don't,
            you'll get <emphasis>"Size mismatch"</emphasis> error which is not very
            descriptive. Note that if you do this from the command
            line using apt-get, you'll notice that it suggests
            running apt-get upate, but unfortunately update manager
            cuts off this part of the error message. Just run
            <emphasis>apt-get update</emphasis> or <emphasis>aptitude
              update</emphasis> from the command line before doing
            update.
          </para>

        </sect3>
      </sect2>

      <sect2>
        <title>RPM packages repository</title>

        <para></para>

        <para>
          To access <emphasis>repository of RPM packages</emphasis>, create
          file
          <emphasis>/etc/yum.repos.d/fwbuilder.repo</emphasis> with the
          following contents:
        </para>

        <programlisting>
[fwbuilder]
name=Firewall Builder
failovermethod=priority
baseurl=http://www.fwbuilder.org/rpm/stable/fedora-$releasever-$basearch
enabled=1

[fwbuilder-testing]
name=Firewall Builder Test Builds
failovermethod=priority
baseurl=http://www.fwbuilder.org/rpm/testing/fedora-$releasever-$basearch
enabled=0
        </programlisting>

        <para>
          Packages in all repositories are signed with GPG key
          with ID EAEE08FE "Firewall Builder Project (Package
          Signing Key) &lt;pkgadmin@fwbuilder.org&gt;".
          Download <ulink url="http://www.fwbuilder.org/PACKAGE-GPG-KEY-fwbuilder.asc">public
            key</ulink> and add it to your key chain to be able to
          verify integrity of the packages in repositories. To
          add the key on Fedora, use the following commands:
        </para>

        <programlisting>
wget http://www.fwbuilder.org/PACKAGE-GPG-KEY-fwbuilder.asc
rpm --import PACKAGE-GPG-KEY-fwbuilder.asc
        </programlisting>


        <para>
          To install stable package of fwbuilder with
          dependencies, use command
        </para>

        <programlisting>
yum install fwbuilder
        </programlisting>

        <para>
          This should find and install both fwbuilder and
          libfwbuilder packages and dependencies.
        </para>

        <para>
          To install latest package from the testing
          repository (latest nightly build), use command
        </para>

        <programlisting>
yum --enablerepo=fwbuilder-testing install fwbuilder
        </programlisting>

      </sect2>

    </sect1>
  </chapter>
